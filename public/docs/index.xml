<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Runink – Runink Docs</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Runink Docs on Runink</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Architecture</title>
      <link>http://localhost:1313/docs/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/architecture/</guid>
      <description>
        
        
        &lt;h1&gt;Runink Architecture: Go/Linux Native Distributed Data Environment&lt;/h1&gt;&lt;p&gt;Self-sufficient, distributed environment for orchestrating and executing data pipelines using Go and Linux primitives. This system acts as the cluster resource manager and scheduler (replacing Slurm), provides Kubernetes-like logical isolation and RBAC, integrates data governance features, and ensures robust security and observability. It aims for high efficiency by avoiding traditional virtualization or container runtimes like Docker. Define a self-sufficient, distributed environment for orchestrating and executing data pipelines using Go and Linux primitives, with enhanced metadata capabilities designed to support standard data governance (lineage, catalog) AND future integration of LLM-generated annotations.&lt;/p&gt;
&lt;h2&gt;High-Level Architecture&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;high-level-architecture&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#high-level-architecture&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Runink operates with a Control Plane managing multiple Worker Nodes, each running a Runi Agent.&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;
%%{init:{&#34;fontFamily&#34;:&#34;monospace&#34;, &#34;sequence&#34;:{&#34;showSequenceNumbers&#34;:true}}}%%
flowchart LR 
    subgraph External [&#34;External Interaction&#34;]
        A[&#34;User / Client
(CLI, UI, API)&#34;]
    end
    subgraph ControlPlane [&#34;HERD CONTROL PLANE (Services state managed in Barn via Raft)&#34;]
        direction TB 
        B[&#34;API Server
(Gateway, AuthN/Z)&#34;]
        subgraph StateStore [&#34;Cluster State Store (Barn)&#34;]
            D[&#34;Barn (KV Store)&#34;]
            subgraph RaftConsensus [&#34;Raft Protocol (HA/Consistency)&#34;]
                D1[&#34;Leader&#34;] --- D2[&#34;Followers&#34;]
            end
            D --- RaftConsensus 
        end
        subgraph InternalServices [&#34;Internal Services (Rely on Barn)&#34;]
            direction TB 
            C[&#34;(Identity &amp; RBAC Mgr)&#34;]
            E[&#34;Scheduler&#34;]
            F[&#34;Secrets Manager&#34;]
            G[&#34;Data Governance Svc&#34;]
        end
        %% Interaction Flow: User -&gt; API -&gt; Barn &amp; Services -&gt; Barn
        A --&gt; B 
        B --&gt;|API Server validates state in Barn / AuthZ| D 
        B --&gt;|API Server Coordinates with RBAC Mgr| C 
        B --&gt;|API Server Coordinates with Scheduler| E 
        B --&gt;|API Server Coordinates with Secrets Mgr| F 
        B --&gt;|API Server Coordinates with Governance Svc| G 

        %% Services use Barn for persistence and state synchronization
        C --&gt;|Stores/Reads Policies| D
        E --&gt;|Watches Tasks / Stores Placements| D
        F --&gt;|Stores/Reads Secrets| D
        G --&gt;|Stores/Reads Core Metadata &amp; Lineage Refs| D
    end 

    subgraph WorkerNode [&#34;Worker Node&#34;]
      direction TB
      H[&#34;Runi Agent&#34;]
      I[&#34;Runi Slice&#34;]
      H --&gt;| Agent manages Slice | I 
    end
    subgraph ExternalServices [&#34;External Services&#34;]
      J[&#34;External Services
(DB, Object Store, LLMs)&#34;]
    end

    %% Control Plane -&gt; Worker Interactions (Orchestrated)
    E --&gt;|Instructs Agent to Place Task| H
    F --&gt;|Delivers Secrets via Agent| H

    %% Worker -&gt; Control Plane / External Interactions
    I --&gt;|Slice Reports Lineage/Metadata to Governance Service| G 
    I --&gt;|Slice interacts with external systems over Data/APIs| J 

    %% Styling Definitions (Adjusted for better light/dark theme visibility)
    style External fill:#aaccff,stroke:#004488,stroke-width:2px,color:#000
    style ControlPlane fill:#e0e0e0,stroke:#444444,stroke-width:2px,color:#000
    style StateStore fill:#f0f0e8,stroke:#777777,stroke-width:1px,color:#000  %% Renamed from StateAndConsensus
    style RaftConsensus fill:#ffebcc,stroke:#aa7700,stroke-width:1px,stroke-dasharray: 5 5,color:#000
    style WorkerNode fill:#cceece,stroke:#006600,stroke-width:2px,color:#000
    style ExternalServices fill:#ffcccc,stroke:#990000,stroke-width:2px,color:#000
&lt;/div&gt;


&lt;script type=&#34;module&#34;&gt;
  import mermaid from &#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs&#34;;
  document.addEventListener(&#39;DOMContentLoaded&#39;, () =&gt; {
    mermaid.initialize({
      startOnLoad: true,
      theme: &#39;default&#39;,
      securityLevel: &#39;loose&#39;,
      flowchart: { useMaxWidth: true, htmlLabels: true },
      zoom: { enabled: true, scaleFactor: 0.2 }
    });
    mermaid.run();
  });
&lt;/script&gt;



&lt;h3&gt;Runi Agent / Worker slice channels orchesrtration&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-agent--worker-slice-channels-orchesrtration&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-agent--worker-slice-channels-orchesrtration&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Ephemeral UIDs &amp;amp; mTLS
Each slice runs as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;non-root ephemeral user&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;With an &lt;strong&gt;Herd-specific UID/GID&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;In an &lt;strong&gt;isolated namespace&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Authenticated over mTLS via service tokens&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;mermaid&#34;&gt;
%%{init:{&#34;fontFamily&#34;:&#34;monospace&#34;, &#34;sequence&#34;:{&#34;showSequenceNumbers&#34;:true}}}%%
flowchart TD
    A[&#34;Runi Agent&lt;br/&gt;(PID 1 inside namespace)&#34;] --&gt; B[&#34;Launch Slice&lt;br/&gt;(Normalize step)&#34;]
    B --&gt; C1[&#34;io.Pipe() Reader&lt;br/&gt;→ Goroutine: Validate step&#34;]
    B --&gt; C2[&#34;io.Pipe() Reader&lt;br/&gt;→ Goroutine: Enrich step&#34;]
    B --&gt; D[&#34;Final Writer&lt;br/&gt;(sink to disk or message bus)&#34;]
&lt;/div&gt;



&lt;h3&gt;Core Principles&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;core-principles&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#core-principles&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User Interaction:&lt;/strong&gt; Client requests are often scoped to a specific Herd.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API Server / RBAC:&lt;/strong&gt; Enforces RBAC policies based on user/service account permissions within a target Herd.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cluster State Store:&lt;/strong&gt; Explicitly stores Herd definitions and their associated resource quotas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scheduler:&lt;/strong&gt; Considers Herd-level quotas when making placement decisions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Secrets Manager:&lt;/strong&gt; Access to secrets might be scoped by Herd.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Governance:&lt;/strong&gt; Metadata (lineage, annotations) can be tagged by or associated with the Herd it belongs to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Runi Agent:&lt;/strong&gt; Receives the target Herd context when launching a slice and uses this information to potentially configure namespaces and apply appropriate cgroup limits based on Herd quotas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Runi Slice:&lt;/strong&gt; A single instance of a pipeline step running as an isolated Worker Slice Process. Executes entirely within the logical boundary and resource constraints defined by its assigned Herd.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Runi Pipes:&lt;/strong&gt; Primarily used now for internal communication within the &lt;code&gt;Runi Agent&lt;/code&gt; to capture logs/stdio from the &lt;code&gt;Runi Slice&lt;/code&gt; it &lt;code&gt;exec&lt;/code&gt;s, rather than for primary data transfer between steps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Herd:&lt;/strong&gt; A logical grouping construct, similar to a Kubernetes Namespace, enforced via RBAC policies and potentially mapped to specific sets of Linux namespaces managed by Agents. Provides multi-tenancy and team isolation. Quotas can be applied per Herd.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go Native &amp;amp; Linux Primitives:&lt;/strong&gt; Core components written in Go, directly leveraging cgroups, namespaces (user, pid, net, mount, uts, ipc), pipes, sockets, and &lt;code&gt;exec&lt;/code&gt; for execution and isolation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-Contained Cluster Management:&lt;/strong&gt; Manages a pool of physical or virtual machines, schedules workloads onto them, and handles node lifecycle.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serverless Execution Model:&lt;/strong&gt; Users define pipelines and resource requests; Runink manages node allocation, scheduling, isolation, scaling (by launching more slices), and lifecycle. Users are subject to quotas managed via cgroups.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security First:&lt;/strong&gt; Integrated identity (OIDC), RBAC, secrets management, network policies, encryption in transit/rest.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Governance Aware:&lt;/strong&gt; Built-in metadata tracking, lineage capture, and support for quality checks. With extension for storage/management of rich data annotations (e.g., from LLMs).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rich Observability:&lt;/strong&gt; Native support for metrics (Prometheus) and logs (Fluentd).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Runink’s Execution Overview&lt;/h1&gt;&lt;p&gt;Runink executes data pipelines using &lt;strong&gt;Go &amp;ldquo;slices&amp;rdquo;&lt;/strong&gt; — lightweight, isolated execution units designed to model both &lt;strong&gt;bounded&lt;/strong&gt; (batch) and &lt;strong&gt;unbounded&lt;/strong&gt; (streaming) data workloads. These are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spawned by the &lt;strong&gt;Runi agent&lt;/strong&gt; on worker nodes&lt;/li&gt;
&lt;li&gt;Executed as &lt;strong&gt;isolated processes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Scoped to &lt;strong&gt;Herd namespaces&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Constrained by &lt;strong&gt;cgroups&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Communicate via &lt;strong&gt;pipes&lt;/strong&gt;, &lt;strong&gt;sockets&lt;/strong&gt;, or &lt;strong&gt;gRPC streams&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This orchestration is &lt;strong&gt;Raft-coordinated&lt;/strong&gt;, making every launch deterministic, fault-tolerant, and observable.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧬 What Are Bounded and Unbounded Slices?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-what-are-bounded-and-unbounded-slices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-what-are-bounded-and-unbounded-slices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Type&lt;/th&gt;
          &lt;th&gt;Use Case&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Bounded&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Batch ETL, contract validation&lt;/td&gt;
          &lt;td&gt;Processes a finite dataset and terminates&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Unbounded&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Streaming ingestion, log/event flows&lt;/td&gt;
          &lt;td&gt;Long-running, backpressured pipelines with checkpointing&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Both types run as &lt;strong&gt;Go processes&lt;/strong&gt; within a controlled &lt;strong&gt;Herd namespace&lt;/strong&gt;, and can be composed together in DAGs.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧰 Slice Internals: Go + Linux Synergy&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-slice-internals-go--linux-synergy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-slice-internals-go--linux-synergy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Each slice is a &lt;strong&gt;native Go process&lt;/strong&gt; managed via:&lt;/p&gt;
&lt;h3&gt;✅ Cgroups&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-cgroups&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-cgroups&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Applied per Herd, per slice&lt;/li&gt;
&lt;li&gt;Limits on CPU, memory, I/O&lt;/li&gt;
&lt;li&gt;Enforced using Linux &lt;code&gt;cgroupv2&lt;/code&gt; hierarchy&lt;/li&gt;
&lt;li&gt;Supports slice preemption and fair resource sharing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;✅ Namespaces&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-namespaces&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-namespaces&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;User, mount, network, and PID namespaces&lt;/li&gt;
&lt;li&gt;Enforce isolation between tenants (Herds)&lt;/li&gt;
&lt;li&gt;Prevent noisy-neighbor problems and info leaks&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;✅ Pipes &amp;amp; IPC&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-pipes--ipc&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-pipes--ipc&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Use of &lt;code&gt;os.Pipe()&lt;/code&gt; or &lt;code&gt;io.Pipe()&lt;/code&gt; in Go to model stage-to-stage communication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;net.Pipe()&lt;/code&gt; and UNIX domain sockets for local transport&lt;/li&gt;
&lt;li&gt;Optionally enhanced via &lt;code&gt;io.Reader&lt;/code&gt;, &lt;code&gt;bufio&lt;/code&gt;, or gRPC streams (for cross-node slices)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;✅ Execution&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-execution&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-execution&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;os/exec&lt;/code&gt; with setns(2) and clone(2) to launch each slice&lt;/li&gt;
&lt;li&gt;Environment-injected config and secrets fetched securely via Raft-backed Secrets Manager&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🔄 Raft as Execution Backbone&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-raft-as-execution-backbone&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-raft-as-execution-backbone&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The &lt;strong&gt;Barn (Cluster State Store)&lt;/strong&gt; is Raft-backed. It ensures:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Raft Role&lt;/th&gt;
          &lt;th&gt;Benefit to Runink&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Leader Election&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Prevents race conditions in pipeline launches&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Log Replication&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Guarantees all agents/schedulers share same DAG, lineage, and config&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Strong Consistency&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Execution decisions are deterministic and audit-traceable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Node crashes do not corrupt state or duplicate work&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Examples of Raft-integrated flows:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DAG submission is a Raft log entry&lt;/li&gt;
&lt;li&gt;Herd quota changes update slice scheduling state&lt;/li&gt;
&lt;li&gt;DLQ routing is replicated for contract validation violations&lt;/li&gt;
&lt;li&gt;Slice termination is consensus-driven (no orphaned processes)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Programming Approaches: Why They Power Runink&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;programming-approaches-why-they-power-runink&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#programming-approaches-why-they-power-runink&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Runink’s architecture isn’t just Go-native — it’s intentionally designed around a few &lt;strong&gt;low-level but high-impact programming paradigms&lt;/strong&gt;. These concepts are what let Runink outperform containerized stacks, enforce security without overhead, and keep pipelines testable, composable, and fast. Runink takes a radically different approach to pipeline execution than traditional data platforms — instead of running heavy containers, JVMs, or external orchestrators, Runink uses &lt;strong&gt;Go-native workers&lt;/strong&gt;, Linux primitives like &lt;strong&gt;cgroups and namespaces&lt;/strong&gt;, and concepts like &lt;strong&gt;data-oriented design and zero-copy streaming&lt;/strong&gt; to deliver &lt;strong&gt;blazing-fast, memory-stable, and secure slices&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Below, we walk through the four core techniques and where they show up in Runink’s components.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;🔄 1. &lt;strong&gt;Functional Pipelines&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-1-functional-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-1-functional-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&amp;ldquo;Like talking how your data flow over high-level functions.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Runink&amp;rsquo;s &lt;code&gt;.dsl&lt;/code&gt; compiles to Go transforms that behave like &lt;strong&gt;pure functions&lt;/strong&gt;: they take input (usually via &lt;code&gt;io.Reader&lt;/code&gt;), apply a deterministic transformation, and emit output (via &lt;code&gt;io.Writer&lt;/code&gt;). There&amp;rsquo;s no shared mutable state, no side effects — just &lt;strong&gt;clear dataflow&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This makes pipelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Composable&lt;/strong&gt;: steps can be reused across domains&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testable&lt;/strong&gt;: golden tests assert input/output correctness&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deterministic&lt;/strong&gt;: behavior doesn&amp;rsquo;t depend on cluster state&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;✅ &lt;strong&gt;Why it matters:&lt;/strong&gt; It brings &lt;strong&gt;unit testability&lt;/strong&gt; and &lt;strong&gt;DAG clarity&lt;/strong&gt; to data pipelines — without needing a centralized scheduler or stateful orchestrator.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;2. &lt;strong&gt;Data-Oriented Design (DOD)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-data-oriented-design-dod&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-data-oriented-design-dod&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&amp;ldquo;Design for the CPU, not the developer.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Instead of modeling data as deeply nested structs or objects, Runink favors &lt;strong&gt;flat, contiguous Go structs&lt;/strong&gt;. This aligns memory layout with CPU cache lines and avoids heap thrashing. This is especially important for Runink’s slice execution and contract validation stages, where predictable access to batches of structs (records) matters.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contracts are validated by scanning &lt;code&gt;[]struct&lt;/code&gt; batches in tight loops.&lt;/li&gt;
&lt;li&gt;Pointers and indirection are minimized for GC performance.&lt;/li&gt;
&lt;li&gt;Contracts power both validation and golden test generation.&lt;/li&gt;
&lt;li&gt;Use slices of structs over slices of pointers to enable &lt;strong&gt;CPU cache locality&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Align field access with columnar memory usage if streaming transforms run across many rows.&lt;/li&gt;
&lt;li&gt;Preallocate buffers in &lt;code&gt;Runi Agent&lt;/code&gt;’s slice execution path to avoid GC churn.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;Core Idea:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;core-idea&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#core-idea&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Layout memory for how it will be accessed, not how it&amp;rsquo;s logically grouped. Runink’s slices often scan, validate, or enrich large batches of records — so struct layout, batching, and memory predictability &lt;strong&gt;directly impact performance&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Apply DOD in Runink:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;apply-dod-in-runink&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#apply-dod-in-runink&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Prefer &lt;strong&gt;flat structs over nested ones&lt;/strong&gt; in contracts:
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Better&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;ID&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Email&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Avoid: nested fields unless necessary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Meta&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Profile&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Email&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;In &lt;code&gt;runi slice&lt;/code&gt;:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;in-runi-slice&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#in-runi-slice&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;sync.Pool&lt;/code&gt; for reusable buffers (especially JSON decoding).&lt;/li&gt;
&lt;li&gt;Pre-size buffers based on contract hints (e.g., &lt;code&gt;maxRecords=10000&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Avoid interface{} — use generated structs via &lt;code&gt;go/types&lt;/code&gt; or &lt;code&gt;go:generate&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Benefits:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;benefits&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#benefits&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Better &lt;strong&gt;memory throughput&lt;/strong&gt;, fewer allocations, and &lt;strong&gt;Go GC-friendliness&lt;/strong&gt; under load.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;structs of arrays (SoA)&lt;/strong&gt; or &lt;code&gt;[]User&lt;/code&gt; with preallocated slices in transformations.&lt;/li&gt;
&lt;li&gt;Minimize pointer indirection. Use value receivers and avoid &lt;code&gt;*string&lt;/code&gt;, &lt;code&gt;*int&lt;/code&gt; unless you need nil.&lt;/li&gt;
&lt;li&gt;Design transforms that operate in &lt;strong&gt;tight loops&lt;/strong&gt;, e.g., &lt;code&gt;for _, rec := range batch&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go structs are faster to iterate over than Python dictionaries or Java POJOs.&lt;/li&gt;
&lt;li&gt;Access patterns align with how CPUs fetch and cache data.&lt;/li&gt;
&lt;li&gt;Contract validation and transforms run over &lt;strong&gt;preallocated &lt;code&gt;[]struct&lt;/code&gt; batches&lt;/strong&gt;, not heap-bound objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;💡 &lt;em&gt;For Python/Java devs:&lt;/em&gt; Think of this like switching from &lt;code&gt;dicts of dicts&lt;/code&gt; to &lt;strong&gt;NumPy-like&lt;/strong&gt; flat arrays — but in Go, with static types and no GC spikes.&lt;/p&gt;
&lt;p&gt;✅ &lt;strong&gt;Why it matters:&lt;/strong&gt; You get &lt;strong&gt;predictable memory use&lt;/strong&gt; and &lt;strong&gt;cache-friendly validation&lt;/strong&gt; at slice scale — perfect for CPU-bound ETL or large-batch processing.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;3. &lt;strong&gt;Zero-Copy and Streaming Pipelines&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-zero-copy-and-streaming-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-zero-copy-and-streaming-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&amp;ldquo;Avoid full in-memory materialization — process as the data flows.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Instead of &lt;code&gt;[]record → transform → []record&lt;/code&gt;, Runink pipelines follow &lt;strong&gt;&lt;code&gt;stream → transform → stream&lt;/code&gt;&lt;/strong&gt; — minimizing allocations and maximizing throughput. Avoid unnecessary data marshaling or full deserialization. Rely on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transforms consume from &lt;code&gt;io.Reader&lt;/code&gt; and emit to &lt;code&gt;io.Writer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Stages communicate via &lt;code&gt;os.Pipe()&lt;/code&gt;, &lt;code&gt;net.Pipe()&lt;/code&gt;, or &lt;code&gt;chan Record&lt;/code&gt; for intra-slice streaming.&lt;/li&gt;
&lt;li&gt;Only materialize records &lt;strong&gt;when needed for validation or transformation&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Intermediate results never fully materialize in memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;Core Idea:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;core-idea-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#core-idea-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Instead of &lt;code&gt;[]Record -&amp;gt; Transform -&amp;gt; []Record&lt;/code&gt;, operate on &lt;strong&gt;streams of bytes or structs&lt;/strong&gt; using &lt;code&gt;io.Reader&lt;/code&gt;, &lt;code&gt;chan Record&lt;/code&gt;, or even UNIX pipes between stages.&lt;/p&gt;
&lt;h4&gt;Runink Optimizations:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runink-optimizations&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runink-optimizations&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;strong&gt;&lt;code&gt;io.Reader → Decoder → Transform → Encoder → io.Writer&lt;/code&gt;&lt;/strong&gt; chain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Design step transforms like this:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ValidateUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewDecoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;encoder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewEncoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;More&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;contracts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isValid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;encoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For multi-stage slices, use &lt;strong&gt;&lt;code&gt;os.Pipe()&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;r1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;r2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Normalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// input -&amp;gt; step 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Enrich&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// step 1 -&amp;gt; step 2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Sink&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// step 2 -&amp;gt; sink&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Benefits:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;benefits-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#benefits-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Constant memory&lt;/strong&gt; even for massive datasets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backpressure&lt;/strong&gt;: If downstream slows down, upstream blocks — great for streaming (Kafka, etc.).&lt;/li&gt;
&lt;li&gt;Enables &lt;strong&gt;DLQ teeing&lt;/strong&gt;: &lt;code&gt;tee := io.MultiWriter(validOut, dlqSink)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Uses &lt;code&gt;io.Reader&lt;/code&gt; / &lt;code&gt;io.Writer&lt;/code&gt; rather than buffering everything in memory.&lt;/li&gt;
&lt;li&gt;Transforms run as &lt;strong&gt;pipes between goroutines&lt;/strong&gt; — like UNIX but typed.&lt;/li&gt;
&lt;li&gt;Memory stays flat, predictable, and bounded — even for 10M+ record streams.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;💡 &lt;em&gt;For pandas/Spark devs:&lt;/em&gt; This is closer to &lt;strong&gt;generator pipelines&lt;/strong&gt; or &lt;strong&gt;structured stream micro-batches&lt;/strong&gt;, but with Go’s backpressure-aware channels and streaming codecs.&lt;/p&gt;
&lt;p&gt;✅ &lt;strong&gt;Why it matters:&lt;/strong&gt; You can process &lt;strong&gt;unbounded streams or 100GB batch files&lt;/strong&gt; with a stable memory footprint — and gain built-in &lt;strong&gt;backpressure and DLQ support&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;4. &lt;strong&gt;Declarative Scheduling with Constraint Propagation&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-declarative-scheduling-with-constraint-propagation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-declarative-scheduling-with-constraint-propagation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&amp;ldquo;Schedule via logic, not instructions.&amp;rdquo;&lt;/em&gt;
The &lt;code&gt;Herd&lt;/code&gt; and &lt;code&gt;Runi Agent&lt;/code&gt; coordination already benefits from Raft-backed state, but push it further with &lt;strong&gt;affinity-aware, declarative scheduling&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Runink doesn’t assign slices imperatively. It &lt;strong&gt;solves&lt;/strong&gt; where to run things, based on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Isolation: &lt;code&gt;@herd(&amp;quot;analytics&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Define &lt;strong&gt;resource constraints&lt;/strong&gt; (e.g., &lt;code&gt;@requires(cpu=2, memory=512Mi, label=“gpu”)&lt;/code&gt;) in &lt;code&gt;.dsl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Placement: &lt;code&gt;@affinity(colocate_with=&amp;quot;step:Join&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Propagate &lt;strong&gt;slice placement decisions&lt;/strong&gt; through constraint-solving logic instead of imperative scheduling.&lt;/li&gt;
&lt;li&gt;Record constraints in the Raft-backed state store to enforce deterministic task placement.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can build this as a small DSL-on-DSL layer (e.g. &lt;code&gt;@affinity(domain=&amp;quot;finance&amp;quot;, colocate_with=&amp;quot;step:JoinUsers&amp;quot;)&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Benefit:&lt;/em&gt; Stronger &lt;strong&gt;determinism&lt;/strong&gt;, &lt;strong&gt;replayability&lt;/strong&gt;, and &lt;strong&gt;multi-tenant safety&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Core Idea:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;core-idea-2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#core-idea-2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Model placement as a &lt;strong&gt;set of constraints&lt;/strong&gt;: affinity, herd quota, GPU needs, tenant isolation, etc. Let the scheduler &lt;strong&gt;solve&lt;/strong&gt; the placement rather than being told where to run.&lt;/p&gt;
&lt;h4&gt;Runink DSL Extension:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runink-dsl-extension&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runink-dsl-extension&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;In &lt;code&gt;.dsl&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gherkin&#34; data-lang=&#34;gherkin&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;@step(&amp;#34;RunLLMValidation&amp;#34;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;@affinity(label=&amp;#34;gpu&amp;#34;,&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; colocate_with=&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;step:ParsePDFs&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;@requires(cpu=&amp;#34;4&amp;#34;,&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; memory=&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;2Gi&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This can be compiled into metadata stored in the Raft-backed scheduler store.&lt;/p&gt;
&lt;h4&gt;Scheduler Logic (Pseudo-Go):&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;scheduler-logic-pseudo-go&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#scheduler-logic-pseudo-go&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Constraints&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;CPU&lt;/span&gt;       &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Memory&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Affinity&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Colocate&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;HerdScope&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ScheduleStep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stepID&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NodeID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;filterByHerd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HerdScope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;filterByResources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CPU&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Colocate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;colocateWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Colocate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Affinity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;matchLabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;constraints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Affinity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pickBest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;candidates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;These constraints are stored in the Raft-backed &lt;code&gt;Barn&lt;/code&gt; and evaluated by the scheduler. In this sense, all decisions are &lt;strong&gt;Raft-logged&lt;/strong&gt;, making slice scheduling &lt;strong&gt;auditable and replayable&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;💡 &lt;em&gt;If you&amp;rsquo;re used to Kubernetes or Docker:&lt;/em&gt; Think of slices as &lt;strong&gt;ephemeral containers, but 10x faster&lt;/strong&gt; — no image pulls, no pod scheduling latency. No containers, no clusters — just data pipelines that behave like code.&lt;/p&gt;
&lt;p&gt;✅ &lt;strong&gt;Why it matters:&lt;/strong&gt; Runink achieves &lt;strong&gt;multi-tenant safety, fault-tolerant execution, and reproducible placement&lt;/strong&gt; — without complex K8s YAML or retries.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Summary Table&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;summary-table&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#summary-table&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Approach&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Use In Runink&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Why It Powers Runink&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Functional Pipelines&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;.dsl&lt;/code&gt; → Go transforms via &lt;code&gt;@step()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Clear transforms, reusable logic, golden testing&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Data-Oriented Design&lt;/td&gt;
          &lt;td&gt;Contract enforcement, slice internals&lt;/td&gt;
          &lt;td&gt;Memory locality, low-GC, CPU-efficient pipelines&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Zero-Copy Streaming&lt;/td&gt;
          &lt;td&gt;Slice-to-slice transport, pipe-to-pipe steps&lt;/td&gt;
          &lt;td&gt;Constant memory, streaming support, low latency&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Declarative Scheduling&lt;/td&gt;
          &lt;td&gt;Herd quotas + slice placement affinity in &lt;code&gt;.dsl&lt;/code&gt; raft store&lt;/td&gt;
          &lt;td&gt;Deterministic, fair, replayable orchestration&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;Future LLM Integration&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;future-llm-integration&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#future-llm-integration&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Pipeline Definition:&lt;/strong&gt; A user defines a pipeline step specifically for LLM annotation. This step specifies the input data source (e.g., path on shared FS/MinIO), the target LLM (e.g., OpenAI model name or internal service endpoint), the prompt, and potentially the output format.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scheduling:&lt;/strong&gt; The &lt;code&gt;Scheduler&lt;/code&gt; assigns this step to a &lt;code&gt;Runi Agent&lt;/code&gt;. If targeting an internal LLM requiring specific hardware (GPU), the scheduler uses node resource information (reported by Agents) for placement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Execution:&lt;/strong&gt; The &lt;code&gt;Runi Agent&lt;/code&gt; launches a &lt;code&gt;Worker Slice Process&lt;/code&gt; for this step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Credentials:&lt;/strong&gt; The Worker Slice receives necessary credentials (e.g., OpenAI API key, MinIO access key) securely via the &lt;code&gt;Secrets Manager&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LLM Call:&lt;/strong&gt; The worker reads input data, constructs the prompt, calls the relevant LLM API (external or internal), potentially handling batching or retries.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metadata Persistence:&lt;/strong&gt; Upon receiving results, the worker extracts the annotations, formats them according to the &lt;code&gt;Data Governance Service&lt;/code&gt; schema, and sends them via gRPC call to the service, linking them to the input data reference. It also reports standard lineage (input data -&amp;gt; LLM step -&amp;gt; annotations).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usage:&lt;/strong&gt; Downstream pipeline steps or external users can then query the &lt;code&gt;Data Governance Service&lt;/code&gt; (via &lt;code&gt;API Server&lt;/code&gt;) to retrieve these annotations for further processing, reporting, or analysis.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Components</title>
      <link>http://localhost:1313/docs/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/components/</guid>
      <description>
        
        
        &lt;h1&gt;Runink Platform Components&lt;/h1&gt;&lt;p&gt;This page describes the core building blocks of Runink — from the API server to slices — that make up the distributed data environment. Each component serves a purpose in ensuring secure, auditable, and high-performance pipeline execution.&lt;/p&gt;
&lt;h2&gt;Components Table&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;components-table&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#components-table&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Component&lt;/th&gt;
          &lt;th&gt;Role&lt;/th&gt;
          &lt;th&gt;Location&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;API Server&lt;/td&gt;
          &lt;td&gt;Entry point, AuthN/Z, coordination&lt;/td&gt;
          &lt;td&gt;Control Plane&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Identity Manager&lt;/td&gt;
          &lt;td&gt;OIDC/JWT validation and RBAC enforcement&lt;/td&gt;
          &lt;td&gt;Control Plane&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Barn&lt;/td&gt;
          &lt;td&gt;Raft-backed KV store&lt;/td&gt;
          &lt;td&gt;Control Plane&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Scheduler&lt;/td&gt;
          &lt;td&gt;DAG-aware placement engine&lt;/td&gt;
          &lt;td&gt;Control Plane&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Secrets Manager&lt;/td&gt;
          &lt;td&gt;Encrypted secret storage and delivery&lt;/td&gt;
          &lt;td&gt;Control Plane&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Governance Svc&lt;/td&gt;
          &lt;td&gt;Lineage, quality, LLM annotations&lt;/td&gt;
          &lt;td&gt;Control Plane&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Runi Agent&lt;/td&gt;
          &lt;td&gt;Worker orchestrator (cgroup+namespace)&lt;/td&gt;
          &lt;td&gt;Worker Node&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Runi Slice&lt;/td&gt;
          &lt;td&gt;Executed unit of pipeline logic&lt;/td&gt;
          &lt;td&gt;Worker Node&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Herd&lt;/td&gt;
          &lt;td&gt;Tenant boundary and resource isolation&lt;/td&gt;
          &lt;td&gt;System-wide&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Contracts&lt;/td&gt;
          &lt;td&gt;Data validation and schema enforcement&lt;/td&gt;
          &lt;td&gt;Contracts repo&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DSL Parser&lt;/td&gt;
          &lt;td&gt;Converts &lt;code&gt;.dsl&lt;/code&gt; to Go DAGs&lt;/td&gt;
          &lt;td&gt;Build pipeline&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;Runink Services&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runink-services&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runink-services&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;📘 Contract Engine&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-contract-engine&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-contract-engine&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;All data contracts (schemas) are defined in Go structs, with support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Required/optional fields&lt;/li&gt;
&lt;li&gt;Type validation and coercion&lt;/li&gt;
&lt;li&gt;Golden testing and schema diffing&lt;/li&gt;
&lt;li&gt;Metadata annotations (e.g., PII, lineage tags)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;💼 &lt;em&gt;Used in:&lt;/em&gt; DSL &lt;code&gt;@contract&lt;/code&gt;, golden tests, slice validation stages.&lt;/p&gt;
&lt;h3&gt;✍️ Feature DSL Parser&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-feature-dsl-parser&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-feature-dsl-parser&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Parser and compiler for &lt;code&gt;.dsl&lt;/code&gt; files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Converts scenario definitions into Go-based DAGs&lt;/li&gt;
&lt;li&gt;Enforces step ordering and contract compliance&lt;/li&gt;
&lt;li&gt;Attaches metadata for scheduling, RBAC, lineage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🔤 &lt;em&gt;Keywords:&lt;/em&gt; &lt;code&gt;@step&lt;/code&gt;, &lt;code&gt;@contract&lt;/code&gt;, &lt;code&gt;@source&lt;/code&gt;, &lt;code&gt;@sink&lt;/code&gt;, &lt;code&gt;@affinity&lt;/code&gt;, &lt;code&gt;@requires&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🏃 Runi Agent&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-runi-agent&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-runi-agent&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Daemon running on each &lt;strong&gt;worker node&lt;/strong&gt;, responsible for execution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Registers with the control plane.&lt;/li&gt;
&lt;li&gt;Launches slices as &lt;strong&gt;Go processes&lt;/strong&gt; within &lt;strong&gt;cgroups&lt;/strong&gt; and &lt;strong&gt;namespaces&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Sets up stdio pipes, config injection, and secrets access.&lt;/li&gt;
&lt;li&gt;Collects logs and exposes Prometheus metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;💡 &lt;em&gt;Design:&lt;/em&gt; PID 1 in isolated namespace, manages ephemeral slices securely.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;⚙️ Runi Slice&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-runi-slice&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-runi-slice&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A &lt;strong&gt;single unit of work&lt;/strong&gt; — a pipeline step — running in an isolated environment.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Executed via &lt;code&gt;os.Exec&lt;/code&gt; as a native Go binary.&lt;/li&gt;
&lt;li&gt;Enforces &lt;strong&gt;herd-defined resource quotas&lt;/strong&gt; using &lt;strong&gt;cgroups&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Receives config, secrets, and contracts.&lt;/li&gt;
&lt;li&gt;Reports lineage to Governance Service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;📦 &lt;em&gt;Properties:&lt;/em&gt; Ephemeral, scoped, observable, auditable.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧱 Barn (Cluster State Store)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-barn-cluster-state-store&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-barn-cluster-state-store&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A &lt;strong&gt;Raft-backed KV store&lt;/strong&gt; providing durable, consistent cluster state.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stores pipeline definitions, slice metadata, herd configs, secrets, etc.&lt;/li&gt;
&lt;li&gt;Supports leader election and quorum for all control plane decisions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🛡️ &lt;em&gt;Guarantees:&lt;/em&gt; High availability, deterministic orchestration, and strong consistency.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧰 Herd&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-herd&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-herd&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Logical boundary for &lt;strong&gt;multi-tenancy&lt;/strong&gt;, &lt;strong&gt;quotas&lt;/strong&gt;, and &lt;strong&gt;governance&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maps to a namespace (network, user, mount, etc.).&lt;/li&gt;
&lt;li&gt;RBAC is scoped per herd.&lt;/li&gt;
&lt;li&gt;Resource quotas applied at the herd level.&lt;/li&gt;
&lt;li&gt;All metadata, secrets, and lineage are tagged with a herd context.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🔐 &lt;em&gt;Analogy:&lt;/em&gt; Like Kubernetes namespaces but tighter and more secure.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Herd Control Plane Services&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;herd-control-plane-services&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#herd-control-plane-services&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;📡 API Server&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-api-server&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-api-server&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The &lt;strong&gt;entry point&lt;/strong&gt; for all client interactions (CLI, UI, and service integrations).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exposes REST/gRPC APIs secured via &lt;strong&gt;OIDC/JWT&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Enforces &lt;strong&gt;RBAC&lt;/strong&gt; and &lt;strong&gt;herd scoping&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Forwards validated requests to:
&lt;ul&gt;
&lt;li&gt;State store (&lt;code&gt;Barn&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Identity Manager&lt;/li&gt;
&lt;li&gt;Scheduler&lt;/li&gt;
&lt;li&gt;Secrets Manager&lt;/li&gt;
&lt;li&gt;Governance Service&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🔐 &lt;em&gt;Security:&lt;/em&gt; Applies policies based on identity and herd-level permissions.&lt;/p&gt;
&lt;h3&gt;🧠 Identity &amp;amp; RBAC Manager&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-identity--rbac-manager&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-identity--rbac-manager&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Responsible for identity resolution and access control.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Validates JWT/OIDC tokens.&lt;/li&gt;
&lt;li&gt;Resolves user roles and herd membership.&lt;/li&gt;
&lt;li&gt;Provides per-herd scoped &lt;strong&gt;RBAC policies&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;📘 &lt;em&gt;Location:&lt;/em&gt; Can run co-located with the API server or standalone.&lt;/p&gt;
&lt;h3&gt;📅 Slice Scheduler&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-slice-scheduler&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-slice-scheduler&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The component responsible for &lt;strong&gt;task placement and orchestration&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reads resource constraints from DSLs (&lt;code&gt;@requires&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Evaluates &lt;strong&gt;herd quotas&lt;/strong&gt;, &lt;strong&gt;affinities&lt;/strong&gt;, and &lt;strong&gt;node health&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Determines &lt;strong&gt;optimal slice placement&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Writes placements into &lt;code&gt;Barn&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🧮 &lt;em&gt;Logic:&lt;/em&gt; Constraint-solving over stateful inputs — affinity, quotas, node availability.&lt;/p&gt;
&lt;h3&gt;🔐 Secrets Manager&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-secrets-manager&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-secrets-manager&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Handles secure secrets storage and delivery.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stores secrets in encrypted form (AES/GCM).&lt;/li&gt;
&lt;li&gt;Enforces access via &lt;strong&gt;RBAC&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Slices receive secrets via &lt;code&gt;Runi Agent&lt;/code&gt; during launch.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🗝️ &lt;em&gt;Design:&lt;/em&gt; Secrets access scoped by herd and role, logged via Raft.&lt;/p&gt;
&lt;h3&gt;📊 Data Governance Service&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-data-governance-service&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-data-governance-service&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Tracks &lt;strong&gt;lineage&lt;/strong&gt;, &lt;strong&gt;metadata&lt;/strong&gt;, and &lt;strong&gt;annotations&lt;/strong&gt; for all slices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stores rich metadata per run, stage, and contract hash.&lt;/li&gt;
&lt;li&gt;Supports querying for audit, compliance, and debugging.&lt;/li&gt;
&lt;li&gt;Can receive &lt;strong&gt;LLM-based annotations&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🔎 &lt;em&gt;Outputs:&lt;/em&gt; Lineage graphs, quality reports, field-level annotations.&lt;/p&gt;
&lt;h3&gt;🔍 Observability Stack&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-observability-stack&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-observability-stack&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Built-in support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prometheus&lt;/strong&gt;: Metrics exposure via &lt;code&gt;/metrics&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fluentd or stdout logs&lt;/strong&gt;: Structured JSON logs captured per slice&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC metadata reporting&lt;/strong&gt;: Trace context, tags, and result metadata&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🧭 &lt;em&gt;Goal:&lt;/em&gt; Enable deep pipeline inspection without needing external agents.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🔄 Pipes and Channels&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-pipes-and-channels&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-pipes-and-channels&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Slices and agents use &lt;strong&gt;pipes&lt;/strong&gt; (via &lt;code&gt;io.Pipe&lt;/code&gt;, &lt;code&gt;os.Pipe&lt;/code&gt;, &lt;code&gt;net.Pipe&lt;/code&gt;) to transmit data and logs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Steps within a slice communicate via in-memory streams.&lt;/li&gt;
&lt;li&gt;No intermediate buffering — zero-copy, backpressure-safe.&lt;/li&gt;
&lt;li&gt;Logs are captured via stdout/stderr and piped to the agent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🚰 &lt;em&gt;Benefits:&lt;/em&gt; Stream processing, constant memory, no containers.&lt;/p&gt;
&lt;hr&gt;

      </description>
    </item>
    
    <item>
      <title>Benchmark</title>
      <link>http://localhost:1313/docs/benchmark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/benchmark/</guid>
      <description>
        
        
        &lt;h2&gt;1. Architecture &amp;amp; Paradigm&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-architecture--paradigm&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-architecture--paradigm&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt; A Go/Linux-native, vertically integrated data platform that combines execution, scheduling, governance, and observability in a single runtime. Unlike traditional stacks, Runink does not rely on Kubernetes or external orchestrators. Instead, it uses a &lt;strong&gt;Raft-based control plane&lt;/strong&gt; to ensure high availability and consensus across services like scheduling, metadata, and security — forming a distributed operating model purpose-built for data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt; Use a layered, loosely coupled stack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Execution:&lt;/em&gt; Spark, Beam (JVM-based)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Orchestration:&lt;/em&gt; Airflow, Dagster (often on Kubernetes)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Transformation:&lt;/em&gt; DBT (runs SQL on external data platforms)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cluster Management:&lt;/em&gt; Kubernetes, Slurm&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Governance:&lt;/em&gt; Collibra, Apache Atlas (external)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Key Differentiator:&lt;/strong&gt; Runink is &lt;strong&gt;built from the ground up&lt;/strong&gt; as a distributed system — with &lt;strong&gt;Raft consensus&lt;/strong&gt; at its core — whereas competitors compose multiple tools that communicate asynchronously or rely on external state systems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;1. MapReduce vs. RDD vs. Raft for Data Pipelines&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-mapreduce-vs-rdd-vs-raft-for-data-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-mapreduce-vs-rdd-vs-raft-for-data-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h3&gt;1.1 Architecture &amp;amp; Paradigm&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;11-architecture--paradigm&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#11-architecture--paradigm&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Aspect&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;MapReduce&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;RDD&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Raft (Runink model)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Origin&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Google (2004)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Spark (2010)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Raft (2013) adapted for distributed control&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Execution Model&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Batch, two-stage (Map → Reduce)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;In-memory DAGs of transformations&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Real-time coordination of distributed nodes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Consistency Model&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Eventual (job outputs persisted)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Best effort (job outputs in memory, lineage for recovery)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Strong consistency (N/2+1 consensus)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Primary Use&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Large batch analytics&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Interactive, iterative analytics&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Distributed metadata/state management for pipelines&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Output checkpointing&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Lineage-based recomputation&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Log replication and state machine replication&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;1.2. Performance &amp;amp; Efficiency&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;12-performance--efficiency&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#12-performance--efficiency&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Aspect&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;MapReduce&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;RDD&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Raft (Runink)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Cold Start Time&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;High (JVM startup, slot allocation)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Medium (Spark cluster overhead)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Low (Go processes, native scheduling)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Memory Use&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Disk-heavy&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Memory-heavy (RDD caching)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Lightweight (control metadata, not bulk data)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;I/O Overhead&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Heavy disk I/O (HDFS reads/writes)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Network/memory optimized, but needs enough RAM&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Minimal (only metadata replication)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Pipeline Complexity&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Requires multiple jobs for DAGs&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Natural DAG execution&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Direct DAG compilation from DSLs (Runink)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;1.3. Data Governance and Lineage&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;13-data-governance-and-lineage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#13-data-governance-and-lineage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Aspect&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;MapReduce&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;RDD&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Raft (Runink)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Built-in Lineage&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;No (external)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Yes (RDD lineage graph)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Yes (atomic commit of contracts, steps, runs)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Governance APIs&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Manual (logs, job output)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Partial (Spark listeners)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Native (contracts, lineage logs, per-slice metadata)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Auditability&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Hard to reconstruct&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Possible with effort&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Native per-run audit logs, Raft-signed events&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;1.4. Fault Tolerance and Recovery&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;14-fault-tolerance-and-recovery&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#14-fault-tolerance-and-recovery&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Aspect&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;MapReduce&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;RDD&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Raft (Runink)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Recovery Mechanism&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Re-run failed jobs&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Recompute from lineage&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Replay committed log entries&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Failure Impact&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Full-stage re-execution&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Depends on lost partitions&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Minimal if quorum is maintained&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Availability Guarantee&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;None&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Partial (driver failure = job loss)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Strong (as long as majority nodes are alive)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;1.5. Security and Isolation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;15-security-and-isolation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#15-security-and-isolation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Aspect&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;MapReduce&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;RDD&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Raft (Runink)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Optional&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Optional&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mandatory (OIDC, RBAC)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Secrets Management&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ad hoc&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ad hoc&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Native, Raft-backed, scoped by Herds&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Multi-Tenancy&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;None&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;None&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Herd isolation (namespace + cgroup enforcement)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;1.6 Real case scenario example&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;16-real-case-scenario-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#16-real-case-scenario-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Imagine a critical pipeline for trade settlement&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MapReduce&lt;/strong&gt; would force every job to write to disk between stages — slow and painful for debugging.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RDD&lt;/strong&gt; would speed things up but require heavy RAM and still risk full job loss if the driver fails.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Raft (Runink)&lt;/strong&gt; keeps every contract, every transformation, every secret &lt;strong&gt;atomically committed&lt;/strong&gt; and recoverable — &lt;strong&gt;even if a node crashes mid-run&lt;/strong&gt;, the system can &lt;strong&gt;resume from the last committed stage&lt;/strong&gt; safely.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;2. Raft Advantages for Distributed Coordination&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-raft-advantages-for-distributed-coordination&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-raft-advantages-for-distributed-coordination&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Uses &lt;strong&gt;Raft&lt;/strong&gt; for &lt;strong&gt;strong consistency&lt;/strong&gt; and &lt;strong&gt;leader election&lt;/strong&gt; across:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Control plane state (Herds, pipelines, RBAC, quotas)&lt;/li&gt;
&lt;li&gt;Scheduler decisions&lt;/li&gt;
&lt;li&gt;Secrets and metadata governance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guarantees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No split-brain conditions&lt;/li&gt;
&lt;li&gt;Predictable and deterministic behavior in failure scenarios&lt;/li&gt;
&lt;li&gt;Fault-tolerant HA (N/2+1 consensus)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes uses etcd (Raft-backed), but tools like Airflow/Spark have no equivalent.&lt;/li&gt;
&lt;li&gt;Scheduling decisions, lineage, and metadata handling are often &lt;strong&gt;eventually consistent&lt;/strong&gt; or stored in &lt;strong&gt;external systems&lt;/strong&gt; without consensus guarantees.&lt;/li&gt;
&lt;li&gt;Result: higher complexity, latency, and coordination failure risks under scale or failure.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;3. Performance &amp;amp; Resource Efficiency&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-performance--resource-efficiency&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-performance--resource-efficiency&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Written in Go for low-latency cold starts and efficient concurrency.&lt;/li&gt;
&lt;li&gt;Uses direct &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;cgroups&lt;/code&gt;, and &lt;code&gt;namespaces&lt;/code&gt;, not Docker/K8s layers.&lt;/li&gt;
&lt;li&gt;Raft ensures &lt;strong&gt;low-overhead coordination&lt;/strong&gt;, avoiding polling retries and state divergence.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spark is JVM-based; powerful but resource-heavy.&lt;/li&gt;
&lt;li&gt;K8s introduces orchestration latency, plus pod startup and scheduling delays.&lt;/li&gt;
&lt;li&gt;Airflow relies on Celery/K8s executors with less efficient scheduling granularity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;4. Scheduling &amp;amp; Resource Management&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-scheduling--resource-management&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-scheduling--resource-management&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Custom, Raft-backed &lt;strong&gt;Scheduler&lt;/strong&gt; matches pipeline steps to nodes in real time.&lt;/li&gt;
&lt;li&gt;Considers Herd quotas, CPU/GPU/Memory availability.&lt;/li&gt;
&lt;li&gt;Deterministic task placement and retry logic are &lt;strong&gt;logged and replayable&lt;/strong&gt; via Raft.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes schedulers are general-purpose and not pipeline-aware.&lt;/li&gt;
&lt;li&gt;Airflow does not control actual compute — delegates to backends like K8s.&lt;/li&gt;
&lt;li&gt;Slurm excels in HPC, but lacks pipeline-native orchestration and data governance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;5. Security Model&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-security-model&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-security-model&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Secure-by-default with OIDC + JWT, RBAC, Secrets Manager, mTLS, and field-level masking.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Secrets are versioned and replicated with Raft&lt;/strong&gt;, avoiding plaintext spillage or inconsistent states.&lt;/li&gt;
&lt;li&gt;Namespace isolation per Herd.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes offers RBAC and secrets, but complexity leads to misconfigurations.&lt;/li&gt;
&lt;li&gt;Airflow often shares sensitive configs (connections, variables) across DAGs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;6. Data Governance, Lineage &amp;amp; Metadata&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;6-data-governance-lineage--metadata&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#6-data-governance-lineage--metadata&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Built-in &lt;strong&gt;Data Governance Service&lt;/strong&gt; stores contracts, lineage, quality metrics, and annotations.&lt;/li&gt;
&lt;li&gt;Changes are &lt;strong&gt;committed to Raft&lt;/strong&gt;, ensuring &lt;strong&gt;atomic updates&lt;/strong&gt; and rollback support.&lt;/li&gt;
&lt;li&gt;Contracts and pipeline steps are &lt;strong&gt;versioned&lt;/strong&gt; and tracked centrally.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Require integrating platforms like Atlas or Collibra.&lt;/li&gt;
&lt;li&gt;Lineage capture is manual or partial, with data loss possible on failure or drift.&lt;/li&gt;
&lt;li&gt;Metadata syncing lacks consistency guarantees.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;7. Multi-Tenancy&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;7-multi-tenancy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#7-multi-tenancy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uses &lt;strong&gt;Herds&lt;/strong&gt; as isolation units — enforced via RBAC, ephemeral UIDs, cgroups, and namespace boundaries.&lt;/li&gt;
&lt;li&gt;Raft ensures configuration updates (quotas, roles) are &lt;strong&gt;safely committed&lt;/strong&gt; across all replicas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes uses namespaces and resource quotas.&lt;/li&gt;
&lt;li&gt;Airflow has no robust multi-tenancy — teams often need separate deployments.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;8. LLM Integration &amp;amp; Metadata Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;8-llm-integration--metadata-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#8-llm-integration--metadata-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LLM inference is a &lt;strong&gt;first-class pipeline step&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Annotations are tied to lineage and &lt;strong&gt;stored transactionally&lt;/strong&gt; in the Raft-backed governance store.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LLMs are orchestrated as container steps via KubernetesPodOperator or Argo.&lt;/li&gt;
&lt;li&gt;Metadata is stored in external tools or left untracked.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;9. Observability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;9-observability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#9-observability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Built-in metrics via Prometheus, structured logs via Fluentd.&lt;/li&gt;
&lt;li&gt;Metadata and run stats are &lt;strong&gt;Raft-consistent&lt;/strong&gt;, enabling reproducible audit trails.&lt;/li&gt;
&lt;li&gt;Observability spans from node → slice → Herd → run.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spark, Airflow, and K8s use external stacks (Loki, Grafana, EFK) that need configuration and instrumentation.&lt;/li&gt;
&lt;li&gt;Logs may be disjointed or context-lacking.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;10. Ecosystem &amp;amp; Maturity&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;10-ecosystem--maturity&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#10-ecosystem--maturity&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Early-stage, but intentionally narrow in scope and highly integrated.&lt;/li&gt;
&lt;li&gt;No need for external orchestrators or data governance platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vast ecosystems (Airflow, Spark, DBT, K8s) with huge community support.&lt;/li&gt;
&lt;li&gt;Tradeoff: Requires significant integration, coordination, and DevOps effort.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;11. Complexity &amp;amp; Operational Effort&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;11-complexity--operational-effort&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#11-complexity--operational-effort&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Runink:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;High initial build complexity — but centralization of Raft and Go-based primitives allows for &lt;strong&gt;deterministic ops&lt;/strong&gt;, easier debug, and stronger safety guarantees.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zero external dependencies&lt;/strong&gt; once deployed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Competitors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Operationally fragmented. DevOps teams must manage multiple platforms (e.g., K8s, Helm, Spark, Airflow).&lt;/li&gt;
&lt;li&gt;Requires cross-tool observability, secrets management, and governance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;✅ Summary: Why Raft Makes Runink Different&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-summary-why-raft-makes-runink-different&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-summary-why-raft-makes-runink-different&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Capability&lt;/th&gt;
          &lt;th&gt;Runink (Raft-Powered)&lt;/th&gt;
          &lt;th&gt;Spark / Airflow / K8s Stack&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;State Coordination&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Raft Consensus&lt;/td&gt;
          &lt;td&gt;Partial (only K8s/etcd)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;HA Replication&lt;/td&gt;
          &lt;td&gt;Tool-dependent&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Scheduler&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Raft-backed, deterministic&lt;/td&gt;
          &lt;td&gt;Varies per layer&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Governance&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Native, consistent, queryable&lt;/td&gt;
          &lt;td&gt;External&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Encrypted + Raft-consistent&lt;/td&gt;
          &lt;td&gt;K8s or env vars&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Lineage&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Immutable + auto-tracked&lt;/td&gt;
          &lt;td&gt;External integrations&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Multitenancy&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Herds + namespace isolation&lt;/td&gt;
          &lt;td&gt;Namespaces (K8s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;End-to-end mTLS + RBAC + UIDs&lt;/td&gt;
          &lt;td&gt;Complex setup&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;LLM-native&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;First-class integration&lt;/td&gt;
          &lt;td&gt;Ad hoc orchestration&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Observability&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Built-in, unified stack&lt;/td&gt;
          &lt;td&gt;Custom integration&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Process flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;process-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#process-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;mermaid&#34;&gt;
%%{init:{&#34;fontFamily&#34;:&#34;monospace&#34;, &#34;sequence&#34;:{&#34;showSequenceNumbers&#34;:true}}}%%
%% Mermaid Diagram: MapReduce vs RDD vs Raft (Runink)
flowchart LR
  subgraph Normal_Operation[&#34;✅ Normal Operation (Execution Flow)&#34;]
    subgraph MapReduce
      ID1[&#34;Input Data 📂&#34;]
      MP[&#34;Map Phase 🛠️&#34;]
      SS[&#34;Shuffle &amp; Sort Phase 🔀&#34;]
      RP[&#34;Reduce Phase 🛠️&#34;]
      ID1 --&gt; MP --&gt; SS --&gt; RP
    end

    subgraph RDD
      RID1[&#34;Input Data 📂&#34;]
      RT[&#34;RDD Transformations 🔄&#34;]
      AT[&#34;Action Trigger ▶️&#34;]
      JS[&#34;Job Scheduler 📋&#34;]
      CE[&#34;Cluster Execution (Executors) ⚙️&#34;]
      OD[&#34;Output Data 📦&#34;]
      RID1 --&gt; RT --&gt; AT --&gt; JS --&gt; CE --&gt; OD
    end

    subgraph Raft_Runink
      RIN[&#34;Input Data 📂&#34;]
      RC[&#34;Raft Commit (Contracts + Metadata) 🗄️&#34;]
      RS[&#34;Runi Scheduler (Raft-backed) 🧠&#34;]
      LW[&#34;Launch Slices (Isolated Workers) 🚀&#34;]
      ROD[&#34;Output Data 📦&#34;]
      RIN --&gt; RC --&gt; RS --&gt; LW --&gt; ROD
    end
  end

  subgraph Failure_Recovery[&#34;⚡ Failure Recovery Flow (Crash Handling)&#34;]
    subgraph MapReduce_Failure
      MFID[&#34;Input Data 📂&#34;]
      MFR[&#34;Map Phase Running 🛠️&#34;]
      MC[&#34;Map Node Crash 🛑&#34;]
      MF[&#34;Job Fails Entirely ❌&#34;]
      MR[&#34;Manual Restart Needed 🔄&#34;]
      MFID --&gt; MFR --&gt; MC --&gt; MF --&gt; MR
    end

    subgraph RDD_Failure
      RFID[&#34;Input Data 📂&#34;]
      RER[&#34;RDD Execution Running 🔄&#34;]
      RCN[&#34;RDD Node Crash 🛑&#34;]
      DR[&#34;Driver Attempts Lineage Recompute 🔁&#34;]
      PR[&#34;Partial or Full Job Restart 🔄&#34;]
      RFID --&gt; RER --&gt; RCN --&gt; DR --&gt; PR
    end

    subgraph Raft_Failure
      RFD[&#34;Input Data 📂&#34;]
      SR[&#34;Slice Running 🚀&#34;]
      RC[&#34;Raft Node Crash 🛑&#34;]
      EL[&#34;Raft Detects Loss + Elects New Leader 🧠&#34;]
      RE[&#34;Reschedule Slice Elsewhere ♻️&#34;]
      CE[&#34;Continue Execution Seamlessly ✅&#34;]
      RFD --&gt; SR --&gt; RC --&gt; EL --&gt; RE --&gt; CE
    end
  end
&lt;/div&gt;


&lt;script type=&#34;module&#34;&gt;
  import mermaid from &#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs&#34;;
  document.addEventListener(&#39;DOMContentLoaded&#39;, () =&gt; {
    mermaid.initialize({
      startOnLoad: true,
      theme: &#39;default&#39;,
      securityLevel: &#39;loose&#39;,
      flowchart: { useMaxWidth: true, htmlLabels: true },
      zoom: { enabled: true, scaleFactor: 0.2 }
    });
    mermaid.run();
  });
&lt;/script&gt;



&lt;h2&gt;🚀 How This Model Beats the Status Quo&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-how-this-model-beats-the-status-quo&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-how-this-model-beats-the-status-quo&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;✅ Compared to Apache Spark&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-compared-to-apache-spark&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-compared-to-apache-spark&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Spark (JVM)&lt;/th&gt;
          &lt;th&gt;Runink (Go + Linux primitives)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;JVM-based, slow cold starts&lt;/td&gt;
          &lt;td&gt;Instantaneous slice spawn using &lt;code&gt;exec&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Containerized via YARN/Mesos/K8s&lt;/td&gt;
          &lt;td&gt;No container daemon needed&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Fault tolerance via RDD lineage/logs&lt;/td&gt;
          &lt;td&gt;Strong consistency via Raft&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Needs external tools for lineage&lt;/td&gt;
          &lt;td&gt;Built-in governance and metadata&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;✅ Compared to Kubernetes + Airflow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-compared-to-kubernetes--airflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-compared-to-kubernetes--airflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Kubernetes / Airflow&lt;/th&gt;
          &lt;th&gt;Runink&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;DAGs stored in SQL, not consistent across API servers&lt;/td&gt;
          &lt;td&gt;DAGs submitted via Raft log, replicated to all&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Task scheduling needs K8s Scheduler or Celery&lt;/td&gt;
          &lt;td&gt;Runi agents coordinate locally via consensus&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Containers = overhead&lt;/td&gt;
          &lt;td&gt;Direct &lt;code&gt;exec&lt;/code&gt; in a namespaced PID space&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Secrets are environment or K8s Secret dependent&lt;/td&gt;
          &lt;td&gt;Raft-backed, RBAC-scoped Secrets Manager&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Governance/logging external&lt;/td&gt;
          &lt;td&gt;Observability and lineage native and real-time&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧠 Conclusion: Go + Linux internals + Raft = Data-Native Compute&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-conclusion-go--linux-internals--raft--data-native-compute&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-conclusion-go--linux-internals--raft--data-native-compute&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Runink leverages &lt;strong&gt;Raft consensus not just for fault tolerance, but as a foundational architectural choice&lt;/strong&gt;. It eliminates whole categories of orchestration complexity, state drift, and configuration mismatches by building from first principles — while offering &lt;strong&gt;a single runtime that natively understands pipelines, contracts, lineage, and compute&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you’re designing a modern data platform — especially one focused on governance, and efficient domain isolation — Runink is a &lt;strong&gt;radically integrated alternative&lt;/strong&gt; to the Kubernetes-centric model.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>CLI Reference</title>
      <link>http://localhost:1313/docs/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/cli/</guid>
      <description>
        
        
        &lt;h1&gt;🧰 Runink CLI Reference (&lt;code&gt;runi&lt;/code&gt;)&lt;/h1&gt;&lt;p&gt;The &lt;code&gt;runi&lt;/code&gt; CLI is the command-line interface to everything in the &lt;strong&gt;Runink&lt;/strong&gt; data platform. It’s your developer-first companion for defining, testing, running, securing, and publishing data pipelines — all from declarative &lt;code&gt;.dsl&lt;/code&gt; files and Go-native contracts.&lt;/p&gt;
&lt;p&gt;This reference describes all available commands, grouped by capability.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧱 Project &amp;amp; Pipeline Lifecycle&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-project--pipeline-lifecycle&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-project--pipeline-lifecycle&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herd init [project-name]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Scaffold a new workspace with starter contracts, features, CI config&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi compile --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate Go pipeline code from &lt;code&gt;.dsl&lt;/code&gt; files&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi run --scenario &amp;lt;file&amp;gt; --contract &amp;lt;contract.json&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run pipelines locally or remotely&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi watch --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Auto-compile &amp;amp; re-run scenario on save&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;📁 Schema &amp;amp; Contract Management&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-schema--contract-management&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-schema--contract-management&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract gen --struct &amp;lt;pkg.Type&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate a contract from Go struct&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract diff --old v1.json --new v2.json&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Show schema drift between versions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract rollback&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Revert to previous contract version&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract history --name &amp;lt;contract&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Show all versions and changelog entries&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract validate --file &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Validate a file against a contract&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract catalog&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Create an index of all contracts in the repo&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract hash&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate contract hash for versioning&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 Testing &amp;amp; Data Validation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-testing--data-validation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-testing--data-validation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi synth --dsl feature.dsl --contract feature.contract --golden input.golden&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate synthetic golden test data based on golden files&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi audit --dsl feature.dsl --contract feature.contract --golden input.golden&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Validate pipeline against contract using golden files&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🔐 Security, Publishing &amp;amp; Compliance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-security-publishing--compliance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-security-publishing--compliance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi secure [--sbom|--sign|--scan]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run security audits and generate SBOM&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi publish&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Push metadata, lineage, and contracts to registry&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi sbom export [--format spdx]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Export SPDX-compliant software bill of materials&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi changelog gen&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate changelogs from contract/feature diffs&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 Observability &amp;amp; Lineage&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-observability--lineage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-observability--lineage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi lineage --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Show DAG lineage for a run&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi lineage track --source A --sink B&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Manually link lineage metadata&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi lineage graph --out file.dot&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Export lineage graph in DOT format&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi metadata get --key &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Retrieve stored metadata for a step&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi metadata annotate --key &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Attach annotation to pipeline metadata&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi logs --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;View logs for a specific run&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi status --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Check status of a pipeline execution&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🤖 Distributed Execution (Remote)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-distributed-execution-remote&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-distributed-execution-remote&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi deploy --target &amp;lt;k8s|local&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Deploy Runi workers to a local or remote cluster&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi start --slice &amp;lt;file&amp;gt; --herd &amp;lt;namespace&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Start execution of a scenario remotely&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi kill --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Terminate running scenario&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;💪 Control Plane &amp;amp; Agents&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-control-plane--agents&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-control-plane--agents&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herdctl create&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Create a new Herd (namespace + quotas + policies)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herdctl delete&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Delete a Herd&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herdctl update&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Update Herd quotas, RBAC, metadata&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herdctl list&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;List all Herds and resource states&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herdctl quota set &amp;lt;herd&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Update CPU/mem quotas live&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi herdctl lineage &amp;lt;herd&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;View lineage graphs scoped to a Herd&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi agentctl list&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;List active Runi agents, resource usage, labels&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi agentctl status &amp;lt;agent&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Detailed agent status (health, registered slices, metrics)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi agentctl drain &amp;lt;agent&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Mark agent as unschedulable (cordon)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi agentctl register&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Manually register agent (optional bootstrap)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi agentctl cordon &amp;lt;agent&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Prevent slice scheduling&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🌐 Worker Slice Management&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-worker-slice-management&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-worker-slice-management&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi slicectl list --herd &amp;lt;id&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;List all active slices for a Herd&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi slicectl logs &amp;lt;slice-id&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Fetch logs for a given slice&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi slicectl cancel &amp;lt;slice-id&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Cancel a running slice gracefully&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi slicectl metrics &amp;lt;slice-id&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Show real-time metrics for a slice&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi slicectl promote &amp;lt;slice-id&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Checkpoint a slice mid-run&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🔀 Introspection &amp;amp; Visualization&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-introspection--visualization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-introspection--visualization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi explain --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Describe DAG and step resolution logic&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi graphviz --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Render DAG as a .png, .svg, or .dot&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi diff --feature old.dsl --feature new.dsl&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Compare feature files and show logic drift&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 REPL &amp;amp; Exploratory Commands&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-repl--exploratory-commands&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-repl--exploratory-commands&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi repl&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Launch interactive DataFrame, SQL, JSON REPL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi json explore -f file.json -q &#39;.email&#39;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run jq-style query on JSON&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi query -e &amp;quot;SELECT * FROM dataset&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run SQL-like query on scenario input&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🛠️ Dev Tools &amp;amp; Generators&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-dev-tools--generators&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-dev-tools--generators&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi gen --dsl input.json&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate feature from sample input&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi contract from-feature &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Extract contract from &lt;code&gt;.dsl&lt;/code&gt; spec&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi schema hash&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate contract fingerprint&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi bump&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Auto-increment contract version with changelog&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧹 Plugins &amp;amp; Extensions&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-plugins--extensions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-plugins--extensions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi plugin install &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Install external plugin&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi plugin list&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;List installed extensions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi plugin run &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Execute a plugin subcommand&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;📦 Packaging &amp;amp; CI/CD&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-packaging--cicd&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-packaging--cicd&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi build&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Compile pipeline bundle for remote use&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi pack&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Zip workspace for deployment/distribution&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi upgrade&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Self-update the CLI and plugins&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi doctor&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Diagnose CLI and project setup&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;📅 Runtime Lifecycle&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-runtime-lifecycle&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-runtime-lifecycle&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi restart --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Restart a pipeline from last successful checkpoint&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi resume --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Resume paused pipeline without reprocessing&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi checkpoint --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Create a persistent step-based checkpoint marker&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;💬 Collaboration &amp;amp; Governance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-collaboration--governance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-collaboration--governance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi comment --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Leave inline comments for review (contract-level QA)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi request-approval --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Submit contract for governance approval&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi feedback --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Attach review notes to a scenario&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🛡️ Privacy, Redaction &amp;amp; Data Escrow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-privacy-redaction--data-escrow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-privacy-redaction--data-escrow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi redact --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Automatically redact PII based on tags&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi escrow --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Encrypt pipeline outputs for future unsealing&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi anonymize --input &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Generate synthetic version of a sensitive input file&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🗓 Event-Based Execution&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-event-based-execution&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-event-based-execution&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi trigger --on &amp;lt;webhook|s3|pubsub&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Set up trigger-based pipeline starts&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi listen --event &amp;lt;type&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Listen for external event to start scenario&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi subscribe --stream &amp;lt;source&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Subscribe to stream source with offset recovery&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🔄 Pipeline &amp;amp; Contract Lifecycle&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-pipeline--contract-lifecycle&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-pipeline--contract-lifecycle&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi freeze --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lock DAG hash and contract state as immutable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi archive --herd &amp;lt;name&amp;gt; --keep &amp;lt;N&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Archive old scenarios/runs beyond retention policy&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi retire --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Deprecate contract from active use&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧬 Metadata Graph &amp;amp; Semantic Search&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-metadata-graph--semantic-search&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-metadata-graph--semantic-search&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi knowledge export --format turtle&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Export contract and DAG metadata as RDF&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;runi query lineage&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run SQL-style queries across lineage metadata&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;blockquote&gt;
  &lt;p&gt;💬 Use &lt;code&gt;runi &amp;lt;command&amp;gt; --help&lt;/code&gt; for flags, options, and examples.&lt;/p&gt;
&lt;p&gt;Runink&amp;rsquo;s CLI gives you a full stack data engine in your terminal — from contracts to clusters, from &lt;code&gt;.dsl&lt;/code&gt; to full observability.&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>CLI Help Commands</title>
      <link>http://localhost:1313/docs/clihelp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/clihelp/</guid>
      <description>
        
        
        &lt;h1&gt;🆘 Runink CLI: Help Template&lt;/h1&gt;&lt;p&gt;This is a developer-friendly help template for implementing consistent &lt;code&gt;runi &amp;lt;command&amp;gt; --help&lt;/code&gt; outputs.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧱 Format: Basic Help Command&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-format-basic-help-command&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-format-basic-help-command&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;runi &amp;lt;command&amp;gt; [subcommand] [flags]

Usage:
  runi &amp;lt;command&amp;gt; [options]

Options:
  -h, --help       Show this help message and exit
  -v, --verbose    Show detailed logs and diagnostics&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Example: &lt;code&gt;runi init --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;example-runi-init---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#example-runi-init---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Initialize a new Runink project.

Usage:
  runi init [project-name]

Flags:
  -h, --help     Show help for init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🔄 Example: &lt;code&gt;runi compile --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-runi-compile---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-runi-compile---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;runi compile --scenario &amp;lt;file.dsl&amp;gt;

Description:
  Compile a `.dsl` scenario and its contract into an executable Go DAG.
  Generates a Go file under `rendered/` based on contract-linked step tags.

Usage:
  runi compile --scenario features/trade_cdm.dsl

Flags:
  --scenario    Path to a DSL scenario file
  --out         Optional: custom output path for DAG (default: rendered/&amp;lt;name&amp;gt;.go)
  --dry-run     Only validate scenario and contract, do not write DAG
  --verbose     Show full DAG step resolution logs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 Example: &lt;code&gt;runi test --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-runi-test---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-runi-test---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;runi test --scenario &amp;lt;file.dsl&amp;gt;

Description:
  Execute a feature scenario with golden test inputs and compare output.
  Supports diff mode and golden update flows.

Usage:
  runi test --scenario features/onboard.dsl

Flags:
  --scenario       DSL file to test
  --golden         Optional: override path to golden test folder
  --update         Automatically update golden output on success
  --only &amp;lt;step&amp;gt;    Run test up to a specific pipeline step&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🔐 Example: &lt;code&gt;runi contract gen --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-runi-contract-gen---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-runi-contract-gen---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;runi contract gen --struct &amp;lt;package.Type&amp;gt; --out &amp;lt;file&amp;gt;

Description:
  Generate a JSON contract definition from a Go struct. Includes schema, access tags, and validation metadata.

Usage:
  runi contract gen --struct contracts.Customer --out contracts/customer.json

Flags:
  --struct     Fully qualified Go type (e.g. contracts.Customer)
  --out        Output contract file path
  --flatten    Inline nested types into flat fields
  --herd       Optional: attach to specific herd (e.g. finance)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi contract diff --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-contract-diff---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-contract-diff---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Diff two versions of a contract and show schema drift.

Usage:
  runi contract diff --old v1.json --new v2.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi run --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-run---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-run---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Run a compiled pipeline with data inputs.

Usage:
  runi run --scenario &amp;lt;file.dsl&amp;gt; [--contract file] [--herd name]

Flags:
  --scenario     Scenario to execute
  --contract     Optional explicit contract
  --herd         Herd to run pipeline in
  --dry-run      Preview DAG resolution only&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi lineage --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-lineage---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-lineage---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Show lineage metadata for a run.

Usage:
  runi lineage --run-id &amp;lt;id&amp;gt;

Flags:
  --run-id       Unique run identifier
  --output       Format (json|csv|graph)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi publish --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-publish---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-publish---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Publish contracts, lineage, and tags to metadata registry.

Usage:
  runi publish --herd &amp;lt;name&amp;gt; [--scenario file]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi repl --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-repl---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-repl---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Start interactive REPL for querying test inputs or contract data.

Usage:
  runi repl --scenario &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🤖 Example: &lt;code&gt;runi deploy --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-runi-deploy---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-runi-deploy---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;runi deploy --target &amp;lt;target&amp;gt;

Description:
  Deploy Runi workers and slices to a remote orchestration cluster.

Usage:
  runi deploy --target k8s

Flags:
  --target      Target platform (k8s, bigmachine)
  --herd        Herd (namespace) to deploy into
  --dry-run     Simulate deployment without applying
  --confirm     Require manual confirmation for remote changes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi schedule --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-schedule---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-schedule---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Schedule a pipeline scenario for recurring execution.

Usage:
  runi schedule --scenario &amp;lt;file&amp;gt; --cron &amp;#34;0 6 * * *&amp;#34;

Flags:
  --scenario     DSL file
  --cron         Cron-style expression&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi audit --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-audit---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-audit---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Show schema contract change history and approvals.

Usage:
  runi audit --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi restart --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-restart---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-restart---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Restart a failed or incomplete pipeline run from its last checkpoint.

Usage:
  runi restart --run-id &amp;lt;uuid&amp;gt;

Flags:
  --run-id     Run ID to restart from
  --force      Ignore checkpoint and rerun from start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi resume --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-resume---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-resume---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Resume an interrupted or paused pipeline.

Usage:
  runi resume --run-id &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi checkpoint --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-checkpoint---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-checkpoint---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Create a DAG state checkpoint for partial run recovery.

Usage:
  runi checkpoint --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi comment --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-comment---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-comment---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Leave inline comments for contracts or fields (used in review tools).

Usage:
  runi comment --contract &amp;lt;file&amp;gt; --field &amp;lt;path&amp;gt; --note &amp;lt;text&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi request-approval --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-request-approval---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-request-approval---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Submit a contract for governance approval and audit.

Usage:
  runi request-approval --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi feedback --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-feedback---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-feedback---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Attach feedback note to a scenario feature for peer review.

Usage:
  runi feedback --scenario &amp;lt;file&amp;gt; --note &amp;lt;text&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi redact --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-redact---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-redact---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Automatically redact fields marked pii:&amp;#34;true&amp;#34; in a contract schema.

Usage:
  runi redact --contract &amp;lt;file&amp;gt; --out &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi escrow --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-escrow---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-escrow---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Encrypt and store output data for delayed release or approval.

Usage:
  runi escrow --run-id &amp;lt;uuid&amp;gt; --out &amp;lt;vault.json&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi anonymize --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-anonymize---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-anonymize---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Create a non-sensitive version of input using faker &amp;#43; tags.

Usage:
  runi anonymize --input &amp;lt;file&amp;gt; --contract &amp;lt;file&amp;gt; --out &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi trigger --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-trigger---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-trigger---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Define an event trigger for this scenario.

Usage:
  runi trigger --scenario &amp;lt;file&amp;gt; --on webhook|s3|pubsub&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi listen --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-listen---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-listen---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Start a listener to monitor incoming event and dispatch pipeline.

Usage:
  runi listen --event &amp;lt;type&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi subscribe --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-subscribe---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-subscribe---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Subscribe to a streaming topic or channel with offset tracking.

Usage:
  runi subscribe --stream &amp;lt;topic&amp;gt; --window 5m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi freeze --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-freeze---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-freeze---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Freeze contract &amp;#43; scenario versions with hashes for snapshot validation.

Usage:
  runi freeze --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi archive --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-archive---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-archive---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Archive old versions of scenarios and their runs by herd.

Usage:
  runi archive --herd &amp;lt;name&amp;gt; --keep 3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi retire --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-retire---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-retire---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Retire a contract so it cannot be used in future scenarios.

Usage:
  runi retire --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi lineage graph --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-lineage-graph---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-lineage-graph---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Export full DAG and contract lineage as GraphViz dot file.

Usage:
  runi lineage graph --out lineage.dot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi knowledge export --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-knowledge-export---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-knowledge-export---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Export pipeline metadata using RDF serialization (Turtle/N-Triples).

Usage:
  runi knowledge export --format turtle&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi query lineage --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-query-lineage---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-query-lineage---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Query lineage metadata using SQL-like syntax.

Usage:
  runi query lineage --sql &amp;#34;SELECT * WHERE pii = true&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi openai audit --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-openai-audit---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-openai-audit---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Use an LLM to summarize contract diffs or suggest field comments.

Usage:
  runi openai audit --contract &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi sandbox --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-sandbox---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-sandbox---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Execute scenario in a secure ephemeral environment.

Usage:
  runi sandbox --scenario &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi simulate --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-simulate---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-simulate---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Replay input data as a stream window to test stateful logic.

Usage:
  runi simulate --input &amp;lt;file&amp;gt; --window 5m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;code&gt;runi mint-token --help&lt;/code&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;runi-mint-token---help&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#runi-mint-token---help&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Generate a short-lived JWT for scoped access by herd or scenario.

Usage:
  runi mint-token --herd finance --role analyst --ttl 5m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🧠 Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;✅ Describe what the command &lt;strong&gt;does&lt;/strong&gt;, not how it&amp;rsquo;s implemented&lt;/li&gt;
&lt;li&gt;✅ Include at least 1 usage example&lt;/li&gt;
&lt;li&gt;✅ Use consistent flags: &lt;code&gt;--scenario&lt;/code&gt;, &lt;code&gt;--contract&lt;/code&gt;, &lt;code&gt;--out&lt;/code&gt;, &lt;code&gt;--herd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;✅ Provide guidance for &lt;code&gt;--dry-run&lt;/code&gt;, &lt;code&gt;--verbose&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;✅ Include multi-step examples if command touches multiple files&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

      </description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>http://localhost:1313/docs/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/contributing/</guid>
      <description>
        
        
        &lt;h1&gt;🤝 Contributing to Runink&lt;/h1&gt;&lt;p&gt;Welcome! First off, thank you for considering contributing to &lt;strong&gt;Runink&lt;/strong&gt;. We deeply appreciate your support and effort to improve our project.&lt;/p&gt;
&lt;p&gt;This document will guide you through the process of contributing code, filing issues, suggesting features, and participating in the Runink community.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;📜 Code of Conduct&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-code-of-conduct&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-code-of-conduct&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We expect everyone participating to adhere to our &lt;a href=&#34;https://github.com/paesdan/runink/main/CODE_OF_CONDUCT.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Code of Conduct&lt;/a&gt;. Respect and kindness are the foundation.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🛠️ How to Contribute&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-how-to-contribute&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-how-to-contribute&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;1. Fork the Repo&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-fork-the-repo&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-fork-the-repo&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use GitHub&amp;rsquo;s &amp;ldquo;Fork&amp;rdquo; button to create a personal copy of the repository.&lt;/p&gt;
&lt;h3&gt;2. Clone Your Fork&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-clone-your-fork&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-clone-your-fork&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/your-username/runink.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; runink&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3. Create a New Branch&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-create-a-new-branch&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-create-a-new-branch&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use a clear branch naming convention:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -b feature/short-description
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -b fix/bug-description&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;4. Make Your Changes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-make-your-changes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-make-your-changes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Follow our coding guidelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write idiomatic Go (gofmt, golint).&lt;/li&gt;
&lt;li&gt;Keep PRs small and focused.&lt;/li&gt;
&lt;li&gt;Update or add tests for your changes.&lt;/li&gt;
&lt;li&gt;Update documentation (&lt;code&gt;docs/&lt;/code&gt;) if applicable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;5. Test Before You Push&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-test-before-you-push&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-test-before-you-push&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Run all tests:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make lint
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make test&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;6. Push and Open a Pull Request&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;6-push-and-open-a-pull-request&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#6-push-and-open-a-pull-request&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Push to your fork and open a Pull Request against the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin feature/short-description&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;On GitHub, create a new Pull Request and fill in the template (title, description, related issues).&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;📋 Development Guidelines&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-development-guidelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-development-guidelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CLI Commands:&lt;/strong&gt; Place new commands inside their respective domain folder (&lt;code&gt;barnctl&lt;/code&gt;, &lt;code&gt;buildctl&lt;/code&gt;, &lt;code&gt;herdctl&lt;/code&gt;, &lt;code&gt;runictl&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing:&lt;/strong&gt; Add unit tests for CLI commands, helpers, validators.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; Use structured logging where needed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; Always consider security (no plaintext secrets, minimal privilege).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt; Avoid premature optimization, but don&amp;rsquo;t introduce obvious inefficiencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 Reporting Bugs&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-reporting-bugs&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-reporting-bugs&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Search existing issues first.&lt;/li&gt;
&lt;li&gt;File a &lt;a href=&#34;https://github.com/your-username/runink/issues/new&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;new issue&lt;/a&gt; with clear reproduction steps.&lt;/li&gt;
&lt;li&gt;Provide logs, stack traces, and your environment (OS, Go version).&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
  &lt;p&gt;If you discover a security vulnerability, &lt;strong&gt;please do not open a public issue.&lt;/strong&gt;&lt;br&gt;
Instead, email us at &lt;a href=&#34;mailto:paes@runink.org&#34; &gt;paes@runink.org&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;🚀 Suggesting Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-suggesting-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-suggesting-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Open an Issue labeled &lt;code&gt;enhancement&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Explain your use case and how it aligns with Runink&amp;rsquo;s vision.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;❤️ Code of Conduct&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-code-of-conduct-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-code-of-conduct-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We’re a community of data builders. We expect contributors to be respectful, inclusive, and constructive.&lt;/p&gt;
&lt;p&gt;Please read our &lt;a href=&#34;https://github.com/paesdan/runink/main/CODE_OF_CONDUCT.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Code of Conduct&lt;/a&gt; before contributing.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧵 Join the Community&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-join-the-community&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-join-the-community&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;GitHub Discussions (coming soon)&lt;/li&gt;
&lt;li&gt;Discord server (invite coming soon)&lt;/li&gt;
&lt;li&gt;Follow our roadmap in &lt;a href=&#34;./docs/roadmap.md&#34; &gt;&lt;code&gt;docs/roadmap.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;📅 Regular Updates&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-regular-updates&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-regular-updates&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We sync main with active development regularly. Expect fast iteration and reviews.&lt;/p&gt;
&lt;p&gt;If you have any questions, feel free to open an issue or discussion!&lt;/p&gt;
&lt;p&gt;Thanks for being part of the &lt;strong&gt;Runink&lt;/strong&gt; Herd and for helping us build the future of safe, expressive, and reliable data pipelines.🐑&lt;/p&gt;
&lt;p&gt;We can’t wait to see what you contribute! 🙌&lt;/p&gt;
&lt;p&gt;— The Runink Team&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Data Lineage</title>
      <link>http://localhost:1313/docs/data-lineage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/data-lineage/</guid>
      <description>
        
        
        &lt;h1&gt;Data Lineage &amp;amp; Metadata Tracking – Runink&lt;/h1&gt;&lt;p&gt;Runink pipelines are designed to be fully &lt;strong&gt;traceable&lt;/strong&gt;, &lt;strong&gt;auditable&lt;/strong&gt;, and &lt;strong&gt;schema-aware&lt;/strong&gt;. With built-in lineage support, every pipeline can generate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual DAGs of data flow and dependencies&lt;/li&gt;
&lt;li&gt;Metadata snapshots with schema versions and field hashes&lt;/li&gt;
&lt;li&gt;Run-level logs for audit, debugging, and compliance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This guide walks through how Runink enables robust &lt;strong&gt;data observability&lt;/strong&gt; and &lt;strong&gt;governance by default&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 What Is Data Lineage?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-what-is-data-lineage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-what-is-data-lineage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Lineage describes where your data came from, what happened to it, and where it went.&lt;/p&gt;
&lt;p&gt;In Runink, every pipeline run captures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sources&lt;/strong&gt;: file paths, streaming URIs, tags&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stages&lt;/strong&gt;: steps applied, transform versions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contracts&lt;/strong&gt;: schema file, struct, and hash&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sinks&lt;/strong&gt;: output paths, filters, conditions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run metadata&lt;/strong&gt;: timestamps, roles, record count&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;📈 Generate a Lineage Graph&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-generate-a-lineage-graph&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-generate-a-lineage-graph&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi lineage --scenario features/orders.dsl --out lineage/orders.svg&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The graph shows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inputs and outputs&lt;/li&gt;
&lt;li&gt;All applied steps&lt;/li&gt;
&lt;li&gt;Contract versions and field diff hashes&lt;/li&gt;
&lt;li&gt;Optional labels (e.g., &lt;code&gt;role&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;drift&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🧾 Per-Run Metadata Log&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-per-run-metadata-log&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-per-run-metadata-log&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Every run emits a record like:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;run_id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;run-20240423-abc123&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;stage&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;JoinUsersAndOrders&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;contract&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;user_order_v2.json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;schema_hash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;b72cd1a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;records_processed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2024-04-23T11:02:00Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;analytics&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;drift_detected&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 Snapshotting &amp;amp; Version Tracking&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-snapshotting--version-tracking&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-snapshotting--version-tracking&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You can snapshot inputs/outputs with:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi snapshot --contract contracts/user.json --out snapshots/users_2024-04-23.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And later compare against historical output.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🚨 Drift Detection&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-drift-detection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-drift-detection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Runink detects when incoming data deviates from expected contract:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi contract diff --old v1.json --new incoming.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or as part of a scenario run:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi run --verify-contract&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This flags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Missing/extra fields&lt;/li&gt;
&lt;li&gt;Type mismatches&lt;/li&gt;
&lt;li&gt;Tag mismatches (e.g., missing &lt;code&gt;pii&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🔐 Metadata for Compliance&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-metadata-for-compliance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-metadata-for-compliance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Attach metadata to every stage:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StageMetadata&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;RunID&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Role&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Contract&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Hash&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Source&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;Timestamp&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Send this to a:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Document DB (e.g. Mongo)&lt;/li&gt;
&lt;li&gt;Data lake (e.g. MinIO, S3)&lt;/li&gt;
&lt;li&gt;Audit stream (e.g. Kafka topic)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;📡 Monitoring &amp;amp; Observability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-monitoring--observability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-monitoring--observability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Runink supports Prometheus metrics per stage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runi_records_processed_total&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runi_stage_duration_seconds&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runi_schema_drift_detected_total&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runi_invalid_records_total&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🧠 Example Use Cases&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-use-cases&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-use-cases&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Role&lt;/th&gt;
          &lt;th&gt;How Lineage Helps&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Data Engineer&lt;/td&gt;
          &lt;td&gt;Debug broken joins, drift, formats&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Analyst&lt;/td&gt;
          &lt;td&gt;Understand where numbers came from&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Governance&lt;/td&gt;
          &lt;td&gt;Prove schema conformance&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ML Engineer&lt;/td&gt;
          &lt;td&gt;Snapshot training input lineage&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;Summary&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;summary&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#summary&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Runink provides end-to-end data lineage as a &lt;strong&gt;first-class feature&lt;/strong&gt;, not an afterthought:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Built-in visual DAGs&lt;/li&gt;
&lt;li&gt;Contract + transform metadata&lt;/li&gt;
&lt;li&gt;Auditable, role-aware stage outputs&lt;/li&gt;
&lt;li&gt;Real-time observability with metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lineage lets you move fast &lt;strong&gt;without breaking trust&lt;/strong&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Feature DSL</title>
      <link>http://localhost:1313/docs/feature-dsl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/feature-dsl/</guid>
      <description>
        
        
        &lt;h1&gt;📘 Feature DSL — Authoring Pipelines in Natural Language&lt;/h1&gt;&lt;p&gt;Runink’s &lt;code&gt;.dsl&lt;/code&gt; files allow data, governance, and domain teams to write &lt;strong&gt;declarative pipeline logic&lt;/strong&gt; in plain English — no YAML, no code, just structured steps tied to contracts.&lt;/p&gt;
&lt;p&gt;Inspired by &lt;strong&gt;Gherkin&lt;/strong&gt; and &lt;strong&gt;feature-driven development&lt;/strong&gt;, the DSL is intentionally designed to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Align with real-world &lt;strong&gt;data contracts&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Support &lt;strong&gt;lineage&lt;/strong&gt;, &lt;strong&gt;compliance&lt;/strong&gt;, and &lt;strong&gt;multi-tenant governance&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Be editable by &lt;strong&gt;non-engineers&lt;/strong&gt; — analysts, stewards, and reviewers&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;✨ Full Example&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-full-example&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-full-example&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-feature&#34; data-lang=&#34;feature&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;Feature:&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; Trade Events – Validation &amp;amp; Compliance
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Scenario:&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; Validate and Tag Incoming Financial Trade Events
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;  Metadata:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    purpose: &amp;#34;Check and tag incoming trade events for compliance and data quality&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    module_layer: &amp;#34;Silver&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    herd: &amp;#34;Finance&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    slo: &amp;#34;99.9%&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    classification: &amp;#34;pii&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    contract: &amp;#34;cdm_trade/fdc3events.contract&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    contract_version: &amp;#34;1.0.0&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    compliance: [&amp;#34;SOX&amp;#34;, &amp;#34;GDPR&amp;#34;, &amp;#34;PCI-DSS&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    lineage_tracking: true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;  Given: &amp;#34;Arrival of Events&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - source_type: stream
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - name: &amp;#34;Trade Events Kafka Stream&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - format: CDM
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - tags: [&amp;#34;live&amp;#34;, &amp;#34;trades&amp;#34;, &amp;#34;finance&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;  When &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Data is received&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Decode each trade event using the CDM schema
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Check for required fields: trade_id, symbol, price, timestamp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Mask sensitive values like SSNs, emails, and bank accounts
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Tag events with classification and region
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Compare schema to the latest approved contract version
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;  Then:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Send valid records to: snowflake table &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Validated Trades Table&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Send invalid records to: snowflake table &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;DLQ for Invalid Trades&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Annotate all records with compliance and lineage metadata
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;  Assertions:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - At least &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;000&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; records must be processed
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - Schema drift must not be detected
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - All sensitive fields must pass redaction or tokenization checks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;  GoldenTest:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    input: &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;cdm_trade/fdc3events.input&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    output: &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;cdm_trade/data/fdc3events.validated.golden&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    validation: strict
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;  Notifications:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - On schema failure → alert &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;alerts/finance_data_validation&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;    - On masking failure → alert &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;alerts/finance_security_breach&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🧠 DSL Concepts&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-dsl-concepts&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-dsl-concepts&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Block&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Feature&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;High-level business intent (group of scenarios)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Scenario&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Specific pipeline run, often tied to a contract version&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Metadata&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Tags used for governance, lineage, compliance, and SLOs&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Given&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Declares the data source and input assumptions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;When&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Describes logic, transformations, and validations to apply&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Then&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Declares output actions — writing to sinks, tagging, alerts&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Assertions&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Validate record counts, masking, schema drift, etc.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;GoldenTest&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Points to expected inputs/outputs for regression safety&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Notifications&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Alerts emitted when failures occur during pipeline runs&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 Metadata-Driven Pipelines&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-metadata-driven-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-metadata-driven-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Each &lt;code&gt;.dsl&lt;/code&gt; is &lt;strong&gt;contract-aware&lt;/strong&gt; and &lt;strong&gt;herd-scoped&lt;/strong&gt; by default.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contracts are declared via &lt;code&gt;contract:&lt;/code&gt; and &lt;code&gt;contract_version:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SLOs, classification, and compliance tags are baked into &lt;code&gt;Metadata&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Data lineage and observability are auto-inferred from DSL structure&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;✅ DSL Advantages&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-dsl-advantages&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-dsl-advantages&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Self-documenting&lt;/strong&gt;: Reads like an audit policy + data spec&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Secure-by-default&lt;/strong&gt;: Every scenario runs inside a &lt;code&gt;herd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Governance-friendly&lt;/strong&gt;: Tracks lineage, policy, SLOs, classification&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reproducible&lt;/strong&gt;: &lt;code&gt;GoldenTest&lt;/code&gt; ensures outputs match expectations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt;: No code, no imperative orchestration logic&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;📎 Tips for Authors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-tips-for-authors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-tips-for-authors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Use this&lt;/th&gt;
          &lt;th&gt;Instead of&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;- Mask sensitive values...&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;@step(&amp;quot;FieldMasker&amp;quot;)&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;Validate and Tag...&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;run pipeline X&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Plain-English assertions&lt;/td&gt;
          &lt;td&gt;Inline test logic&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;contract: &amp;quot;x.contract&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Hardcoded field lists&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;📚 Related Links&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-related-links&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-related-links&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./schema-contracts.md&#34; &gt;📑 Schema Contracts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./data-lineage.md&#34; &gt;🧬 Data Lineage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./getting_started.md#5-test-your-pipelines&#34; &gt;🧪 Testing Pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🎯 Final Thought&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-final-thought&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-final-thought&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;With Runink DSL, &lt;strong&gt;your data pipeline is the spec&lt;/strong&gt; — no translation layers, no wasted doc effort. Write what the pipeline should do, tag it with intent, and Runink turns it into secure, auditable, executable logic.&lt;/p&gt;
&lt;p&gt;Let your domain experts lead the way — and let infra follow automatically.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>http://localhost:1313/docs/getting_started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/getting_started/</guid>
      <description>
        
        
        &lt;h1&gt;Getting Started with Runink&lt;/h1&gt;&lt;p&gt;Welcome to &lt;strong&gt;Runink&lt;/strong&gt;! This quick-start guide will help you get up and running with Runink to effortlessly build, test, and run data pipelines.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🚀 &lt;strong&gt;1. Installation&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-1-installation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-1-installation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Make sure you have Go installed (v1.20 or later). Then install Runink:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go install github.com/runink/runink@latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ensure &lt;code&gt;$GOPATH/bin&lt;/code&gt; is in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🛠 &lt;strong&gt;2. Initialize Your Project&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-2-initialize-your-project&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-2-initialize-your-project&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Create a new Runink project in seconds:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi init myproject
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myproject&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This command generates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initial Go module&lt;/li&gt;
&lt;li&gt;Sample contracts&lt;/li&gt;
&lt;li&gt;Example &lt;code&gt;.dsl&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;Golden file tests&lt;/li&gt;
&lt;li&gt;Dockerfile and CI/CD configs&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;📋 &lt;strong&gt;3. Explore the Project Structure&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-3-explore-the-project-structure&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-3-explore-the-project-structure&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Your project includes:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;myproject/
├── bin/                  -&amp;gt; CLI
├── contracts/            -&amp;gt; Schema contracts and transformation logic on Go structs
├── features/             -&amp;gt; Scenarios definitions for each feature from the `.dsl` files
├── golden/               -&amp;gt; Golden files used in regression testing with examples and synthetic data
├── dags/                 -&amp;gt; Generated DAG code from the contracts and features to be executed by Runi
├── herd/                 -&amp;gt; Domain Service Control Policies (Herd context isolation)
├── barn/                 -&amp;gt; Runi Agent manager: cgroups, metrics, logs, gRPC control plane
├── docs/                 -&amp;gt; Markdown docs, examples, use cases, and playbooks
└── .github/workflows/    -&amp;gt; CI/CD and test pipelines&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;⚙️ &lt;strong&gt;4. Compile and Run Pipelines&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-4-compile-and-run-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-4-compile-and-run-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Compile your first pipeline:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi compile --scenario features/example.dsl --out pipeline/example.go --herd my-data-herd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Execute a scenario:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi run --scenario features/example.dsl --herd my-data-herd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;✅ &lt;strong&gt;5. Test Your Pipelines&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-5-test-your-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-5-test-your-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Use built-in golden testing to ensure correctness:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi audit --scenario features/example.dsl --herd my-data-herd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi synth --scenario features/example.dsl --herd my-data-herd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If logic changes are intentional, update golden files:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi update --scenario features/example.dsl --update --herd my-data-herd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 &lt;strong&gt;6. Interactive REPL&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-6-interactive-repl&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-6-interactive-repl&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Explore and debug data interactively:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi fetch --scenario features/example.dsl --herd my-data-herd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Example REPL commands:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;load csv://data/input.csv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apply MyTransform
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;show&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;📚 &lt;strong&gt;7. Next Steps&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-7-next-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-7-next-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;📖 Learn the &lt;a href=&#34;./feature-dsl.md&#34; &gt;Feature DSL Syntax&lt;/a&gt; to write expressive data pipelines&lt;/li&gt;
&lt;li&gt;🔎 Explore &lt;a href=&#34;./data-lineage.md&#34; &gt;Data Lineage &amp;amp; Metadata&lt;/a&gt; for auditability and reproducibility&lt;/li&gt;
&lt;li&gt;📦 Understand &lt;a href=&#34;./schema-contracts.md&#34; &gt;Schema &amp;amp; Contract Management&lt;/a&gt; to ensure schema validation and drift detection&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🚧 &lt;strong&gt;Support &amp;amp; Community&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-support--community&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-support--community&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Need help or have suggestions?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open an &lt;a href=&#34;https://github.com/runink/runink/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Join our community discussions and get involved!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s build secure, fast, and auditable pipelines — the Go-native way, with Runink.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Glossary</title>
      <link>http://localhost:1313/docs/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/glossary/</guid>
      <description>
        
        
        &lt;h1&gt;Runink Glossary&lt;/h1&gt;&lt;p&gt;This glossary defines key terms, acronyms, and concepts used throughout the Runink documentation and codebase.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;.dsl File&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dsl-file&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dsl-file&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A human-readable file written in Gherkin syntax used to describe a data pipeline scenario using Given/When/Then structure and tags like @source, @step, and @sink.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;BDD (Behavior-Driven Development)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bdd-behavior-driven-development&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bdd-behavior-driven-development&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A software development approach that describes application behavior in plain language, often used with .dsl files.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Golden File&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;golden-file&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#golden-file&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A snapshot of the expected output from a pipeline or transformation, used to assert correctness in automated tests.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Schema Contract&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;schema-contract&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#schema-contract&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A versioned definition of a data structure (e.g., JSON, Protobuf, Go struct) used to validate pipeline input/output and detect schema drift.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Schema Drift&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;schema-drift&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#schema-drift&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;An unintended or unexpected change in a schema that may break pipeline compatibility.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;DAG (Directed Acyclic Graph)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dag-directed-acyclic-graph&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dag-directed-acyclic-graph&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A graph of pipeline stages where each edge represents a dependency, and there are no cycles. Used for orchestrating non-linear workflows.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;DLQ (Dead Letter Queue)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dlq-dead-letter-queue&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dlq-dead-letter-queue&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A place to store invalid or failed records so they can be analyzed and retried later without interrupting the rest of the pipeline.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;REPL (Read-Eval-Print Loop)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;repl-read-eval-print-loop&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#repl-read-eval-print-loop&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;An interactive interface that lets users type commands and immediately see the results. Runink’s REPL supports loading data, applying steps, and viewing outputs.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Lineage&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lineage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lineage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A traceable path showing how data flows through each pipeline stage, from source to sink, including what transformed it and which contract was applied.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Prometheus&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;prometheus&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#prometheus&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A monitoring system used to collect and store metrics from pipeline executions.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;OpenTelemetry&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;opentelemetry&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#opentelemetry&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;An observability framework for collecting traces and metrics, helping to visualize the execution path and performance of pipelines.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;gRPC&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;grpc&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#grpc&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A high-performance, open-source universal RPC framework used for running distributed pipeline stages.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Protobuf (Protocol Buffers)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;protobuf-protocol-buffers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#protobuf-protocol-buffers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A method for serializing structured data, used in gRPC communication and schema definitions.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Bigmachine&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bigmachine&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bigmachine&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A Go library for orchestrating distributed, stateless workers. Used by Runink to scale pipelines across multiple machines.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Contract Hash&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;contract-hash&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#contract-hash&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A hash value generated from a schema contract to uniquely identify its version. Used for detecting changes and tracking usage.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;SBOM (Software Bill of Materials)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;sbom-software-bill-of-materials&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#sbom-software-bill-of-materials&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A manifest of all dependencies and components included in a software release, used for compliance and security auditing.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;FDC3 (Financial Desktop Connectivity and Collaboration Consortium)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;fdc3-financial-desktop-connectivity-and-collaboration-consortium&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#fdc3-financial-desktop-connectivity-and-collaboration-consortium&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A standard for interop between financial applications. Runink can integrate with FDC3 schemas and messaging models.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;CDM (Common Domain Model)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cdm-common-domain-model&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cdm-common-domain-model&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A standardized schema used in finance and trading to represent products, trades, and events. Supported natively by Runink.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Have a term you’d like added? Open an issue or suggest a change in the docs!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Roadmap</title>
      <link>http://localhost:1313/docs/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/roadmap/</guid>
      <description>
        
        
        &lt;h1&gt;🗺️ Runink Roadmap&lt;/h1&gt;&lt;p&gt;Welcome to the official &lt;strong&gt;Runink Roadmap&lt;/strong&gt; — our evolving guide to what we&amp;rsquo;re building, where we’re headed, and how you can get involved.&lt;/p&gt;
&lt;p&gt;Runink is built on the belief that modern data platforms should be &lt;strong&gt;safe by default&lt;/strong&gt;, &lt;strong&gt;composable by design&lt;/strong&gt;, and &lt;strong&gt;collaborative at scale&lt;/strong&gt;. This roadmap reflects our commitment to transparency, community-driven development, and rapid iteration.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🧩 Roadmap Themes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-roadmap-themes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-roadmap-themes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Theme&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Composable Pipelines&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Make it easy to build, reuse, and test pipeline steps across teams and domains.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Secure &amp;amp; Compliant by Default&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Tighten RBAC, data contracts, and observability for enterprise-grade governance.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;DevX &amp;amp; Developer Productivity&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Empower devs with a powerful CLI, REPL, codegen, and rapid iteration loops.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Streaming-First DataOps&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Advance real-time use cases with backpressure-safe, contract-aware streaming.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Interoperability &amp;amp; Ecosystem&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Play well with FDC3, CDM, OpenLineage, Kafka, Snowflake, and more.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧭 Current Focus (Q2 2025)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-current-focus-q2-2025&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-current-focus-q2-2025&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;These items are in active development or early testing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Herd Namespace Isolation&lt;/strong&gt; (multi-tenant namespace support)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Golden Test Rewrites&lt;/strong&gt; for easier review and diffing&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;CLI REPL SQL Mode&lt;/strong&gt; with DataFrame-to-Feature export&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;RBAC &amp;amp; Token Scoping Enhancements&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Raft-backed Barn &amp;amp; Secrets Manager Integration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;gRPC Streaming Orchestration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Pipeline Preview Mode (dry-run with metadata only)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Lineage UI + CLI support&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Remote Artifact Signing &amp;amp; SBOM generation (SLSA-style)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🔜 Near-Term (Q3 2025)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-near-term-q3-2025&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-near-term-q3-2025&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Planned next based on user feedback and enterprise needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Live Feature File Linter &amp;amp; Formatter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;REPL Session Recorder&lt;/strong&gt; (record → replay feature building)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Multi-Herd Scheduling &amp;amp; Cost Reporting&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Secrets Rotation + External Vault Integration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Contract Diff Web Viewer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Push-to-Registry UX from CLI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;DLQ Visualization + Retry Tools&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;Plugin Marketplace (source/sink/step handlers)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🌅 Long-Term Vision (Late 2025+)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-long-term-vision-late-2025&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-long-term-vision-late-2025&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Our long-range goals to shape Runink into the &lt;strong&gt;standard platform for responsible data pipelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⚙️ &lt;strong&gt;Full No-YAML Orchestration (Declarative-Only Pipelines)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;🧠 &lt;strong&gt;AI Copilot for Contract &amp;amp; Scenario Generation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;🌐 &lt;strong&gt;Cross-Org Data Mesh Support via Herd Federation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;📡 &lt;strong&gt;Runink Cloud&lt;/strong&gt; (fully managed, secure, multi-tenant SaaS)&lt;/li&gt;
&lt;li&gt;🔒 &lt;strong&gt;Zero-Trust Data Contracts (ZK + Provenance)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🧠 Ideas We&amp;rsquo;re Exploring&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-ideas-were-exploring&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-ideas-were-exploring&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;These are in research/design phases — feedback welcome!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✨ Feature DSL Step Suggestions in CLI&lt;/li&gt;
&lt;li&gt;🔀 Schema Merge Conflict Resolution UX&lt;/li&gt;
&lt;li&gt;📥 Native ingestion support for S3/Parquet/Arrow&lt;/li&gt;
&lt;li&gt;🔎 Full integration with OpenLineage + dbt Core&lt;/li&gt;
&lt;li&gt;🧾 GitHub Copilot integration for contract authoring&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🙋‍♀️ Contribute to the Roadmap&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-contribute-to-the-roadmap&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-contribute-to-the-roadmap&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We prioritize what the community and users need most. If there’s a feature you’d love to see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open an issue using the &lt;code&gt;Feature Request&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;Upvote existing roadmap items via 👍 reactions&lt;/li&gt;
&lt;li&gt;Join upcoming roadmap discussions (Discord coming soon!)&lt;/li&gt;
&lt;li&gt;PRs welcome for anything marked as &lt;code&gt;help-wanted&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🔄 Release Cadence&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-release-cadence&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-release-cadence&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We aim for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Minor releases&lt;/strong&gt; every 4–6 weeks (feature drops, improvements)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Patch releases&lt;/strong&gt; as needed (hotfixes, regressions)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Major milestones&lt;/strong&gt; every ~6 months with community showcases&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Track progress in &lt;a href=&#34;./CHANGELOG.md&#34; &gt;&lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Thanks for being part of the journey — we’re building Runink &lt;strong&gt;with&lt;/strong&gt; you, not just &lt;strong&gt;for&lt;/strong&gt; you. Let’s define the future of safe, modular, and explainable data platforms together.&lt;/p&gt;
&lt;p&gt;— Team Runink 🐑&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Runink Quickstart</title>
      <link>http://localhost:1313/docs/runink_quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/runink_quickstart/</guid>
      <description>
        
        
        &lt;h1&gt;🚀 Runink Quickstart: CDM Trade Pipeline&lt;/h1&gt;&lt;p&gt;This example shows how to define, test, apply, and run a declarative data pipeline using Runink.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Environment scenario&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;environment-scenario&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#environment-scenario&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;mermaid&#34;&gt;
%% Mermaid Diagram: Runink Architecture (Blueprint View)

flowchart TD
  subgraph Developer_Client[&#34;🌐 Developer / Client&#34;]
    Developer[&#34;Developer&#34;]
  end

  subgraph Global_Control_Plane[&#34;🧭 Runink Global Control Plane (HA Setup)&#34;]
    GlobalAPI[&#34;API Server x3
- AuthN/AuthZ
- Herd Routing
- TLS gRPC&#34;]
    HerdDirectory[&#34;Herd Directory
- Maps Herds to Raft Groups
- Metadata Routing&#34;]
  end

  subgraph Finance_Herd[&#34;🏦 Finance Herd Partition&#34;]
    FinanceScheduler[&#34;Finance Scheduler (Leader)
- DAG Planning
- Placement Decisions&#34;]
    FinanceBarn[&#34;Finance Barn (KV Store)
- BadgerDB (Local)&#34;]
    FinanceGovernance[&#34;Finance Governance Service
- Lineage
- Quality
- Contracts&#34;]
    FinanceSecrets[&#34;Finance Secrets Manager
- Raft-backed Secret Storage&#34;]
    FinanceRaft[&#34;Finance Raft Group (5 Nodes)
(etcd-io/raft)&#34;]
  end

  subgraph Analytics_Herd[&#34;📊 Analytics Herd Partition&#34;]
    AnalyticsScheduler[&#34;Analytics Scheduler (Leader)
- DAG Planning
- Placement Decisions&#34;]
    AnalyticsBarn[&#34;Analytics Barn (KV Store)
- BadgerDB (Local)&#34;]
    AnalyticsGovernance[&#34;Analytics Governance Service
- Lineage
- Quality
- Contracts&#34;]
    AnalyticsSecrets[&#34;Analytics Secrets Manager
- Raft-backed Secret Storage&#34;]
    AnalyticsRaft[&#34;Analytics Raft Group (5 Nodes)
(etcd-io/raft)&#34;]
  end

  subgraph Worker_Cluster[&#34;🧱 Worker Nodes Cluster&#34;]
    RuniAgent[&#34;Runi Agent x100
- Node Registration
- Slice Management
- Metrics Collection&#34;]
    RuniSlice[&#34;Runi Slice (Ephemeral Container)
- Herd Namespaced
- Config Loaded
- Secrets Injected&#34;]
  end

  Developer --&gt; | CLI/API Requests | GlobalAPI 
  GlobalAPI --&gt; | Resolve Herd Assignment | HerdDirectory 
  GlobalAPI --&gt; | Finance Pipelines | FinanceScheduler 
  GlobalAPI --&gt; | Analytics Pipelines | AnalyticsScheduler 

  FinanceScheduler --&gt; | DAG and Placement Reads | FinanceBarn 
  FinanceGovernance --&gt; | Metadata/Lineage Writes | FinanceBarn 
  FinanceSecrets --&gt; | Secrets CRUD | FinanceBarn
  FinanceBarn --&gt; | Log Replication | FinanceRaft

  AnalyticsScheduler --&gt; | DAG and Placement Reads | AnalyticsBarn
  AnalyticsGovernance --&gt; | Metadata/Lineage Writes | AnalyticsBarn
  AnalyticsSecrets --&gt; | Secrets CRUD | AnalyticsBarn 
  AnalyticsBarn --&gt; | Log Replication | AnalyticsRaft

  FinanceScheduler --&gt; | Dispatch Finance Slices | RuniAgent
  AnalyticsScheduler --&gt; | Dispatch Analytics Slices | RuniAgent

  RuniAgent --&gt; | Launch with Herd Isolation | RuniSlice
  RuniAgent --&gt; | Fetch Finance Secrets | FinanceSecrets
  RuniAgent --&gt; | Fetch Analytics Secrets | AnalyticsSecrets

  RuniSlice --&gt; | Emit Lineage Events | FinanceGovernance
  RuniSlice --&gt; | Emit Lineage Events | AnalyticsGovernance 
  RuniSlice --&gt; | Expose Service Port | RuniAgent 
  RuniAgent --&gt; | Port-Forwarded Access | Developer 

&lt;/div&gt;


&lt;script type=&#34;module&#34;&gt;
  import mermaid from &#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs&#34;;
  document.addEventListener(&#39;DOMContentLoaded&#39;, () =&gt; {
    mermaid.initialize({
      startOnLoad: true,
      theme: &#39;default&#39;,
      securityLevel: &#39;loose&#39;,
      flowchart: { useMaxWidth: true, htmlLabels: true },
      zoom: { enabled: true, scaleFactor: 0.2 }
    });
    mermaid.run();
  });
&lt;/script&gt;



&lt;h2&gt;🛠️ Prerequisites&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-prerequisites&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-prerequisites&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Ensure you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;.dsl&lt;/code&gt; scenario: &lt;code&gt;features/cdm_trade/trade_cdm.dsl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A Go contract file: &lt;code&gt;contracts/trade_cdm_multi.go&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Golden test files: &lt;code&gt;golden/cdm_trade/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sample input data: &lt;code&gt;golden/cdm_trade/input.json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our example presents the following:&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;
flowchart TD
  A[&#34;Kafka (raw)&#34;] --&gt; B[&#34;DecodeCDMEvents&#34;]
  B --&gt; C[&#34;sf:control.decoded_cdm_events&#34;]

  B --&gt; D[&#34;ValidateLifecycle&#34;]
  D --&gt;|if !valid| E[&#34;sf:control.invalid_cdm_events&#34;]
  D --&gt;|if valid| F[&#34;TagWithFDC3Context&#34;]
  F --&gt; G[&#34;sf:cdm.validated_trade_events&#34;]
&lt;/div&gt;



&lt;hr&gt;
&lt;h2&gt;💡 Example Flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Create a secure namespace (herd)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi herd init finance
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi compile --scenario features/payment.dsl --herd finance --contract contracts/payment.go --out dags/payment.go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi run --dag dags/payment.go&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 Test Your Pipelines&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-test-your-pipelines&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-test-your-pipelines&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi audit --scenario features/payment.dsl --contract contracts/payment.go --golden tests/input.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi synth --scenario features/payment.dsl --contract contracts/payment.go --golden tests/input.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi fetch --scenario features/example.dsl --golden tests/input.json --output table.sql --show&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;📊 Inspect Pipeline Execution&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-inspect-pipeline-execution&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-inspect-pipeline-execution&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;After running, inspect the pipeline using:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi status --run-id RUN-20240424-XYZ --herd finance&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Example Output&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;example-output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#example-output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;run_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;RUN-20240424-XYZ&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;herd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;completed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;DecodeCDMEvents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;processed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sf://control.decoded_cdm_events&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ValidateLifecycle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;passed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;failed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;valid → sf://cdm.validated_trade_events&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;invalid → sf://control.invalid_cdm_events&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;TagWithFDC3Context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enriched&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;context_prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fdc3.instrumentView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lineage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;contract_hash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;a9cd23f…&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;contract_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;created_by&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;service-account:etl-runner&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 Follow-Up Commands&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-follow-up-commands&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-follow-up-commands&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi lineage --run-id RUN-20240424-XYZ
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi logs --run-id RUN-20240424-XYZ
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi publish --herd finance --scenario features/cdm_trade/cdm_trade.dsl&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Runink makes secure, declarative data orchestration easy — every pipeline is testable, auditable, and reproducible.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Schema Contracts</title>
      <link>http://localhost:1313/docs/schema-contracts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/schema-contracts/</guid>
      <description>
        
        
        &lt;h1&gt;Schema &amp;amp; Contract Management – Runink&lt;/h1&gt;&lt;p&gt;Runink enables &lt;strong&gt;data contracts&lt;/strong&gt; as native Go structs — giving you strong typing, version tracking, schema validation, and backward compatibility across pipelines.&lt;/p&gt;
&lt;p&gt;This guide shows how to define, version, test, and enforce schema contracts in your pipelines.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;📦 What Is a Contract?&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-what-is-a-contract&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-what-is-a-contract&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A contract in Runink is a schema definition used to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Validate incoming and outgoing data&lt;/li&gt;
&lt;li&gt;Detect schema drift&lt;/li&gt;
&lt;li&gt;Provide PII and RBAC tagging&lt;/li&gt;
&lt;li&gt;Drive pipeline generation and testing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contracts are generated from Go structs annotated with tags.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;✍️ Defining a Contract&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-defining-a-contract&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-defining-a-contract&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This schema contract defines the structure and policy metadata for incoming FDC3-based trade events. It ensures compliance with financial regulations and enables secure, testable transformations.&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;contracts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ContractName: fdc3events&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Version: 1.0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Classification: pii&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Compliance: SOX, GDPR, PCI-DSS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// AccessPolicy: herd-isolated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// SLO: 99.9%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Source: Kafka Stream (&amp;#34;topics.trade_events&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FDC3Event&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;TradeID&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;trade_id&amp;#34; validate:&amp;#34;required&amp;#34; pii:&amp;#34;false&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Symbol&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;symbol&amp;#34; validate:&amp;#34;required&amp;#34; pii:&amp;#34;false&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Price&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;price&amp;#34; validate:&amp;#34;required&amp;#34; pii:&amp;#34;false&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Timestamp&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;timestamp&amp;#34; validate:&amp;#34;required&amp;#34; pii:&amp;#34;false&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// PII Fields (Must be masked and tested)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;SSN&lt;/span&gt;         &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;ssn,omitempty&amp;#34; pii:&amp;#34;true&amp;#34; access:&amp;#34;compliance&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;BankAccount&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;bank_account,omitempty&amp;#34; pii:&amp;#34;true&amp;#34; access:&amp;#34;finance&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Email&lt;/span&gt;       &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;email,omitempty&amp;#34; pii:&amp;#34;true&amp;#34; access:&amp;#34;support&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Metadata for governance tracking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Region&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;region,omitempty&amp;#34; lineage:&amp;#34;true&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Compliance&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;compliance_tags,omitempty&amp;#34; lineage:&amp;#34;true&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Valid&lt;/span&gt;       &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;valid,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;🔐 Field-Level Tags&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-field-level-tags&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-field-level-tags&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Tag&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;validate:&amp;quot;required&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Required for schema validation&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;pii:&amp;quot;true&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Field contains sensitive personal data&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;access:&amp;quot;role&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;RBAC-enforced visibility (e.g., &lt;code&gt;support&lt;/code&gt;, &lt;code&gt;finance&lt;/code&gt;)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;lineage:&amp;quot;true&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Field tracked for lineage and audit logging&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 Decode Stage&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-decode-stage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-decode-stage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This function is the first &lt;code&gt;@step&lt;/code&gt; in most &lt;code&gt;.dsl&lt;/code&gt; scenarios using this contract:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// DecodeFDC3Events parses raw CDM Kafka events into structured FDC3Event objects.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;DecodeFDC3Events&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewDecoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;encoder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewEncoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;More&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FDC3Event&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;encoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;✅ Used In:&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-used-in&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-used-in&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;features/fdc3_validation.dsl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;golden/cdm_trade/fdc3events.validated.golden.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fdc3events.conf&lt;/code&gt; as the runtime binding&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi contract gen --struct contracts.Order --out contracts/order.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;✅ Enforcing a Contract&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-enforcing-a-contract&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-enforcing-a-contract&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gherkin&#34; data-lang=&#34;gherkin&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;Given &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;the contract: contracts/order.json&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi run --verify-contract&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Runink ensures that all records match the expected schema.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 Schema Drift Detection&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-schema-drift-detection&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-schema-drift-detection&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Compare current vs expected schema:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi contract diff --old v1.json --new v2.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Output shows added, removed, or changed fields, types, tags, and ordering.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;📊 Hashing and Snapshotting&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-hashing-and-snapshotting&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-hashing-and-snapshotting&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Each contract has a hash for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version tracking&lt;/li&gt;
&lt;li&gt;Lineage graph integrity&lt;/li&gt;
&lt;li&gt;Change detection&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi contract &lt;span class=&#34;nb&#34;&gt;hash&lt;/span&gt; contracts/order.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Snapshot for reproducibility:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi snapshot --contract contracts/order.json --out snapshots/order_v1.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🧬 Advanced Tags&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-advanced-tags&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-advanced-tags&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pii:&amp;quot;true&amp;quot;&lt;/code&gt; – marks field as sensitive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;access:&amp;quot;finance&amp;quot;&lt;/code&gt; – restricts field to roles&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enum:&amp;quot;pending,approved,rejected&amp;quot;&lt;/code&gt; – enum constraint (optional)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;required:&amp;quot;true&amp;quot;&lt;/code&gt; – fail if field is null or missing&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🧪 Contract Testing&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-contract-testing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-contract-testing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Use golden tests to assert schema correctness:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; --scenario features/orders.dsl&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And diff output against expected:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi diff --gold testdata/orders.golden.json --new out/orders.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;🗃️ Contract Catalog&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-contract-catalog&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-contract-catalog&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Generate an index of all contracts in your repo:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runi contract catalog --out docs/contracts.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This can be plugged into:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docs browser&lt;/li&gt;
&lt;li&gt;Contract registry&lt;/li&gt;
&lt;li&gt;CI schema check&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🧾 Example Contract Output&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;-example-contract-output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#-example-contract-output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Order&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;order_id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;float64&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;pii&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;access&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;support&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;hash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a94f3bc...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Summary&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;summary&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#summary&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Contracts in Runink power everything:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Schema validation&lt;/li&gt;
&lt;li&gt;RBAC and compliance&lt;/li&gt;
&lt;li&gt;Pipeline generation&lt;/li&gt;
&lt;li&gt;Test automation&lt;/li&gt;
&lt;li&gt;Lineage and snapshots&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use contracts to make your data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Safe&lt;/li&gt;
&lt;li&gt;Trustworthy&lt;/li&gt;
&lt;li&gt;Documented&lt;/li&gt;
&lt;li&gt;Governed&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Security &amp; RBAC</title>
      <link>http://localhost:1313/docs/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/security/</guid>
      <description>
        
        
        &lt;h2&gt;Supported Versions&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;supported-versions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#supported-versions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We currently support the latest major release of pipetool. Older versions may not receive security updates or patches.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Reporting a Vulnerability&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;reporting-a-vulnerability&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#reporting-a-vulnerability&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If you discover a security vulnerability, please do not open a public issue.&lt;/p&gt;
&lt;p&gt;Instead, contact us directly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;a href=&#34;mailto:security@yourdomain.org&#34; &gt;security@yourdomain.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PGP Key:&lt;a href=&#34;https://yourdomain.org/pgp.key&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; https://yourdomain.org/pgp.key&lt;/a&gt; (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We aim to respond to all security reports within 5 business days. All disclosures will be handled confidentially and professionally.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Disclosure Process&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;disclosure-process&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#disclosure-process&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Vulnerability reported via email&lt;/li&gt;
&lt;li&gt;Maintainers investigate and validate the issue&lt;/li&gt;
&lt;li&gt;A patch is prepared and tested privately&lt;/li&gt;
&lt;li&gt;Coordinated disclosure timeline is agreed upon with reporter&lt;/li&gt;
&lt;li&gt;Advisory + patched release are published&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;Hall of Fame&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;hall-of-fame&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#hall-of-fame&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We may credit contributors who report valid vulnerabilities in our release notes, changelogs, or SECURITY.md — with consent.&lt;/p&gt;
&lt;p&gt;Thank you for helping make &lt;em&gt;Runink&lt;/em&gt; safer for everyone!&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
